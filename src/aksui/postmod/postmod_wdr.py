# -*- coding: iso-8859-1 -*-

#-----------------------------------------------------------------------------
# Python source generated by wxDesigner from file: postmod.wdr
# Do not modify this file, all changes will be lost!
#-----------------------------------------------------------------------------

# Include wxWindows' modules
import wx
import wx.grid

# Custom source
from wxx import *
from aslider import *


# Window functions

ID_BUTTON_EXPORT_PATH = 10000
ID_TEXTCTRL_EXPORTPATH = 10001
ID_TEXT = 10002
ID_TEXTCTRL_SEPERATOR = 10003
ID_CHOICE_EXISTING_FILES = 10004
ID_CHECKBOX_FILENAMEDIR = 10005
ID_CHECKBOX_KEEPEXTENSION = 10006
ID_CHECKBOX_USESAMPLENAMES = 10007
ID_CHECKBOX_USESAMPLEFILENAMES = 10008
ID_CHECKBOX_USESAMPLENUMBERS = 10009
ID_SAMPLE_EXPORT_PREVIEW_BOX = 10010
ID_SAMPLE_EXPORT_PREVIEW_BUTTON = 10011
ID_SAMPLE_EXPORT_EXPORT_BUTTON = 10012
ID_GAUGE_EXPORT = 10013

def SampleExportFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.HORIZONTAL )
    
    item1 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.BoxSizer( wx.HORIZONTAL )
    
    item3 = wx.Button( parent, ID_BUTTON_EXPORT_PATH, "Export Path", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4 = wx.TextCtrl( parent, ID_TEXTCTRL_EXPORTPATH, "", wx.DefaultPosition, [180,-1], 0 )
    item4.SetName( "ExportPath" )
    item2.Add( item4, 0, wx.GROW|wx.ALL, 5 )

    item1.Add( item2, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item5 = wx.BoxSizer( wx.HORIZONTAL )
    
    item6 = wx.StaticText( parent, ID_TEXT, "Seperator", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.TextCtrl( parent, ID_TEXTCTRL_SEPERATOR, "-", wx.DefaultPosition, [40,-1], 0 )
    item7.SetName( "Seperator" )
    item5.Add( item7, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item8 = wx.StaticText( parent, ID_TEXT, "If Exists:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.Choice( parent, ID_CHOICE_EXISTING_FILES, wx.DefaultPosition, [100,-1], 
        ["Overwrite","Ignore","Rename"] , 0 )
    item9.SetName( "ExportMode" )
    item5.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item5, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item10 = wx.BoxSizer( wx.HORIZONTAL )
    
    item11 = wx.CheckBox( parent, ID_CHECKBOX_FILENAMEDIR, "Create Filename Dir", wx.DefaultPosition, wx.DefaultSize, 0 )
    item11.SetValue( True )
    item11.SetToolTip( wx.ToolTip("If checked, create new directory based on filename") )
    item11.SetName( "CreateFilenameDir" )
    item10.Add( item11, 0, wx.ALL, 5 )

    item10.Add( [ 20, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.CheckBox( parent, ID_CHECKBOX_KEEPEXTENSION, "Filter Extensions", wx.DefaultPosition, wx.DefaultSize, 0 )
    item12.SetValue( True )
    item12.SetToolTip( wx.ToolTip("Filter existing extensions from sample filenames") )
    item12.SetName( "FilterExtensions" )
    item10.Add( item12, 0, wx.ALL, 5 )

    item1.Add( item10, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL|wx.SHAPED, 0 )

    item13 = wx.BoxSizer( wx.HORIZONTAL )
    
    item15 = wx.StaticBox( parent, -1, "Naming Options" )
    item14 = wx.StaticBoxSizer( item15, wx.VERTICAL )
    
    item16 = wx.CheckBox( parent, ID_CHECKBOX_USESAMPLENAMES, "Use Sample Names", wx.DefaultPosition, wx.DefaultSize, 0 )
    item16.SetName( "UseSampleNames" )
    item14.Add( item16, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item17 = wx.CheckBox( parent, ID_CHECKBOX_USESAMPLEFILENAMES, "Use Sample Filenames", wx.DefaultPosition, wx.DefaultSize, 0 )
    item17.SetValue( True )
    item17.SetToolTip( wx.ToolTip("Use sample filenames stored in module") )
    item17.SetName( "UseSampleFilenames" )
    item14.Add( item17, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item18 = wx.CheckBox( parent, ID_CHECKBOX_USESAMPLENUMBERS, "Use Sample Numbers", wx.DefaultPosition, wx.DefaultSize, 0 )
    item18.SetToolTip( wx.ToolTip("Name the samples by number") )
    item18.SetName( "UseSampleNumbers" )
    item14.Add( item18, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item13.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item19 = wx.BoxSizer( wx.HORIZONTAL )
    
    item13.Add( item19, 0, wx.ALL, 0 )

    item1.Add( item13, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item21 = wx.StaticBox( parent, -1, "Output" )
    item20 = wx.StaticBoxSizer( item21, wx.HORIZONTAL )
    
    item22 = wx.ListBox( parent, ID_SAMPLE_EXPORT_PREVIEW_BOX, wx.DefaultPosition, [200,200], [], wx.LB_EXTENDED|wx.LB_HSCROLL|wx.LB_NEEDED_SB )
    item22.SetName( "OutputBox" )
    item20.Add( item22, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item20, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item23 = wx.BoxSizer( wx.VERTICAL )
    
    item24 = wx.Button( parent, ID_SAMPLE_EXPORT_PREVIEW_BUTTON, "Preview", wx.DefaultPosition, wx.DefaultSize, 0 )
    item24.SetName( "PreviewButton" )
    item23.Add( item24, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item25 = wx.Button( parent, ID_SAMPLE_EXPORT_EXPORT_BUTTON, "Export", wx.DefaultPosition, wx.DefaultSize, 0 )
    item25.SetName( "ExportButton" )
    item23.Add( item25, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item26 = wx.Gauge( parent, ID_GAUGE_EXPORT, 100, wx.DefaultPosition, [100,10], 0 )
    item26.SetName( "ExportGauge" )
    item23.Add( item26, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item23, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_FILEBATCHLISTCTRL = 10014

def FileBatchDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wxListControl( parent, ID_FILEBATCHLISTCTRL, wx.DefaultPosition, [150,100], wx.LC_REPORT|wx.LC_EDIT_LABELS|wx.SUNKEN_BORDER )
    item0.Add( item1, 20, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_BUTTON = 10015

def BetaExpiredFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.StaticText( parent, ID_TEXT, "This BETA has expired.  Download a new version from www.magicfish.net.", wx.DefaultPosition, wx.DefaultSize, 0 )
    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2 = wx.Button( parent, ID_BUTTON, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item0.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_TEXT_1 = 10016
ID_TEXTCTRL_PREFIX = 10017
ID_TEXT_2 = 10018
ID_TEXTCTRL_SUFFIX = 10019
ID_CHECKBOX_UNFOLD = 10020
ID_TEXT_4 = 10021
ID_LINE = 10022
ID_BUTTON_PREVIEW = 10023
ID_BUTTON_PROCESS = 10024
ID_GAUGE_SUBPROGRESS = 10025

def GenericProcessorDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    parent.GenericDynamicSizer = item0
    
    item2 = wx.StaticBox( parent, -1, "File Options" )
    item1 = wx.StaticBoxSizer( item2, wx.HORIZONTAL )
    
    item3 = wx.BoxSizer( wx.VERTICAL )
    parent.GenericProcessorFileOptionsSizer = item3
    
    item4 = wx.BoxSizer( wx.HORIZONTAL )
    
    item5 = wx.Button( parent, ID_BUTTON_EXPORT_PATH, "Export Path", wx.DefaultPosition, wx.DefaultSize, 0 )
    item4.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6 = wx.TextCtrl( parent, ID_TEXTCTRL_EXPORTPATH, "", wx.DefaultPosition, [160,-1], 0 )
    item6.SetName( "ExportPath" )
    item4.Add( item6, 1, wx.GROW|wx.ALL, 5 )

    item3.Add( item4, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item7 = wx.BoxSizer( wx.HORIZONTAL )
    
    item8 = wx.StaticText( parent, ID_TEXT_1, "Prefix", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.TextCtrl( parent, ID_TEXTCTRL_PREFIX, "", wx.DefaultPosition, [60,-1], 0 )
    item9.SetToolTip( wx.ToolTip("Prefix to prepend to generated filenames.") )
    item9.SetName( "Prefix" )
    item7.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.StaticText( parent, ID_TEXT_2, "Suffix", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item11 = wx.TextCtrl( parent, ID_TEXTCTRL_SUFFIX, "", wx.DefaultPosition, [60,-1], 0 )
    item11.SetToolTip( wx.ToolTip("Suffix to append to generated filenames.") )
    item11.SetName( "Suffix" )
    item7.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.StaticText( parent, ID_TEXT, "Seperator", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item13 = wx.TextCtrl( parent, ID_TEXTCTRL_SEPERATOR, "-", wx.DefaultPosition, [20,-1], 0 )
    item13.SetName( "Seperator" )
    item7.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3.Add( item7, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item14 = wx.BoxSizer( wx.HORIZONTAL )
    
    item15 = wx.CheckBox( parent, ID_CHECKBOX_FILENAMEDIR, "Create Filename Dir   ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item15.SetValue( True )
    item15.SetToolTip( wx.ToolTip("If checked, a directory will be created based on the module filename") )
    item15.SetName( "CreateFilenameDir" )
    item14.Add( item15, 0, wx.ALL, 0 )

    item16 = wx.CheckBox( parent, ID_CHECKBOX_KEEPEXTENSION, "Filter Extensions", wx.DefaultPosition, wx.DefaultSize, 0 )
    item16.SetValue( True )
    item16.SetToolTip( wx.ToolTip("Filter existing extensions in module filenames") )
    item16.SetName( "FilterExtensions" )
    item14.Add( item16, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item3.Add( item14, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item17 = wx.BoxSizer( wx.HORIZONTAL )
    
    item18 = wx.CheckBox( parent, ID_CHECKBOX_UNFOLD, "Unfold", wx.DefaultPosition, wx.DefaultSize, 0 )
    item18.SetName( "Unfold" )
    item17.Add( item18, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item17.Add( [ 20, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3.Add( item17, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item19 = wx.BoxSizer( wx.HORIZONTAL )
    
    item20 = wx.StaticText( parent, ID_TEXT_4, "Existing Files", wx.DefaultPosition, wx.DefaultSize, 0 )
    item19.Add( item20, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item21 = wx.Choice( parent, ID_CHOICE_EXISTING_FILES, wx.DefaultPosition, [100,-1], 
        ["Overwrite","Ignore","Rename"] , 0 )
    item21.SetName( "ExportMode" )
    item19.Add( item21, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3.Add( item19, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item1.Add( item3, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 0 )

    item22 = wx.BoxSizer( wx.HORIZONTAL )
    parent.GenericProcessorOutputBoxSizer = item22
    
    item23 = wx.StaticLine( parent, ID_LINE, wx.DefaultPosition, [-1,200], wx.LI_VERTICAL )
    item22.Add( item23, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item24 = wx.ListBox( parent, ID_SAMPLE_EXPORT_PREVIEW_BOX, wx.DefaultPosition, [200,200], [], wx.LB_EXTENDED|wx.LB_HSCROLL|wx.LB_NEEDED_SB )
    item24.SetName( "OutputBox" )
    item22.Add( item24, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item25 = wx.StaticLine( parent, ID_LINE, wx.DefaultPosition, [-1,200], wx.LI_VERTICAL )
    item22.Add( item25, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item1.Add( item22, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 0 )

    item26 = wx.BoxSizer( wx.VERTICAL )
    parent.GenericProcessorButtonsSizer = item26
    
    item27 = wx.Button( parent, ID_BUTTON_PREVIEW, "Preview", wx.DefaultPosition, wx.DefaultSize, 0 )
    item27.SetName( "PreviewButton" )
    item26.Add( item27, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item28 = wx.Button( parent, ID_BUTTON_PROCESS, "Process", wx.DefaultPosition, wx.DefaultSize, 0 )
    item28.SetName( "ProcessButton" )
    item26.Add( item28, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item29 = wx.Gauge( parent, ID_GAUGE_EXPORT, 100, wx.DefaultPosition, [100,10], 0 )
    item29.SetName( "ExportGauge" )
    item26.Add( item29, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item30 = wx.Gauge( parent, ID_GAUGE_SUBPROGRESS, 100, wx.DefaultPosition, [100,10], 0 )
    item30.SetName( "ExportGauge" )
    item26.Add( item30, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item26, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_HTMLWINDOW = 10026

def AboutDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = parent.FindWindowById( ID_HTMLWINDOW )
    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2 = wx.Button( parent, ID_BUTTON, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item0.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_BUTTON_WAV = 10027
ID_TEXTCTRL_WAVFILE = 10028
ID_BUTTON_IT = 10029
ID_TEXTCTRL_ITFILE = 10030
ID_CHECKBOX_ALLOW100 = 10031
ID_CHECKBOX_ALLOW_STEREO = 10032
ID_CHECKBOX_1 = 10033
ID_CHECKBOX_2 = 10034
ID_CHECKBOX_4 = 10035
ID_CHECKBOX_8 = 10036
ID_CHECKBOX_16 = 10037
ID_CHECKBOX_32 = 10038
ID_CHECKBOX_64 = 10039
ID_LOOP_1 = 10040
ID_LOOP_2 = 10041
ID_LOOP_4 = 10042
ID_LOOP_8 = 10043
ID_LOOP_16 = 10044
ID_LOOP_32 = 10045
ID_LOOP_64 = 10046
ID_BUTTON_SLICE = 10047
ID_GAUGE_PROGRESS = 10048

def WAVSlicerDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.HORIZONTAL )
    
    item1 = wx.BoxSizer( wx.VERTICAL )
    
    item3 = wx.StaticBox( parent, -1, "Files" )
    item2 = wx.StaticBoxSizer( item3, wx.VERTICAL )
    
    item4 = wx.BoxSizer( wx.HORIZONTAL )
    
    item5 = wx.Button( parent, ID_BUTTON_WAV, "WAV", wx.DefaultPosition, [50,-1], 0 )
    item5.SetName( "WAVButton" )
    item4.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6 = wx.TextCtrl( parent, ID_TEXTCTRL_WAVFILE, "", wx.DefaultPosition, [160,-1], 0 )
    item6.SetToolTip( wx.ToolTip("Select the WAV to be sliced into a new or existing module.") )
    item6.SetName( "WAVFile" )
    item4.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2.Add( item4, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item7 = wx.BoxSizer( wx.HORIZONTAL )
    
    item8 = wx.Button( parent, ID_BUTTON_IT, "IT", wx.DefaultPosition, [50,-1], 0 )
    item8.SetName( "ITButton" )
    item7.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.TextCtrl( parent, ID_TEXTCTRL_ITFILE, "", wx.DefaultPosition, [160,-1], 0 )
    item9.SetToolTip( wx.ToolTip("The WAV slices will be appended to the selected module's sample list.") )
    item9.SetName( "ITFile" )
    item7.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2.Add( item7, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item1.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item11 = wx.StaticBox( parent, -1, "Options" )
    item10 = wx.StaticBoxSizer( item11, wx.VERTICAL )
    
    item12 = wx.BoxSizer( wx.VERTICAL )
    
    item13 = wx.CheckBox( parent, ID_CHECKBOX_ALLOW100, "Allow 100+               ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item13.SetToolTip( wx.ToolTip("Allows more than 100 samples, supported in Modplug Tracker but not Impulse Tracker.") )
    item13.SetName( "Allow100" )
    item12.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item14 = wx.CheckBox( parent, ID_CHECKBOX_ALLOW_STEREO, "Allow Stereo", wx.DefaultPosition, wx.DefaultSize, 0 )
    item14.SetToolTip( wx.ToolTip("Allows stereo samples, supported in Modplug Tracker but not Impulse Tracker.") )
    item14.SetName( "AllowStereo" )
    item12.Add( item14, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item10.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item10, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item16 = wx.StaticBox( parent, -1, "Slices" )
    item15 = wx.StaticBoxSizer( item16, wx.VERTICAL )
    
    item17 = wx.CheckBox( parent, ID_CHECKBOX_1, "1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item17.SetValue( True )
    item17.SetName( "Slice1" )
    item15.Add( item17, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item18 = wx.CheckBox( parent, ID_CHECKBOX_2, "2", wx.DefaultPosition, wx.DefaultSize, 0 )
    item18.SetName( "Slice2" )
    item15.Add( item18, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item19 = wx.CheckBox( parent, ID_CHECKBOX_4, "4", wx.DefaultPosition, wx.DefaultSize, 0 )
    item19.SetValue( True )
    item19.SetName( "Slice4" )
    item15.Add( item19, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item20 = wx.CheckBox( parent, ID_CHECKBOX_8, "8", wx.DefaultPosition, wx.DefaultSize, 0 )
    item20.SetValue( True )
    item20.SetName( "Slice8" )
    item15.Add( item20, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item21 = wx.CheckBox( parent, ID_CHECKBOX_16, "16", wx.DefaultPosition, wx.DefaultSize, 0 )
    item21.SetName( "Slice16" )
    item15.Add( item21, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item22 = wx.CheckBox( parent, ID_CHECKBOX_32, "32", wx.DefaultPosition, wx.DefaultSize, 0 )
    item22.SetName( "Slice32" )
    item15.Add( item22, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item23 = wx.CheckBox( parent, ID_CHECKBOX_64, "64", wx.DefaultPosition, wx.DefaultSize, 0 )
    item23.SetName( "Slice64" )
    item15.Add( item23, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item25 = wx.StaticBox( parent, -1, "Loop" )
    item24 = wx.StaticBoxSizer( item25, wx.VERTICAL )
    
    item26 = wx.CheckBox( parent, ID_LOOP_1, " ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item26.SetName( "Loop1" )
    item24.Add( item26, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item27 = wx.CheckBox( parent, ID_LOOP_2, " ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item27.SetName( "Loop2" )
    item24.Add( item27, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item28 = wx.CheckBox( parent, ID_LOOP_4, " ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item28.SetName( "Loop4" )
    item24.Add( item28, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item29 = wx.CheckBox( parent, ID_LOOP_8, " ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item29.SetName( "Loop8" )
    item24.Add( item29, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item30 = wx.CheckBox( parent, ID_LOOP_16, " ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item30.SetName( "Loop16" )
    item24.Add( item30, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item31 = wx.CheckBox( parent, ID_LOOP_32, " ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item31.SetName( "Loop32" )
    item24.Add( item31, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item32 = wx.CheckBox( parent, ID_LOOP_64, " ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item32.SetName( "Loop64" )
    item24.Add( item32, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item24, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item33 = wx.BoxSizer( wx.VERTICAL )
    
    item33.Add( [ 20, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item34 = wx.Button( parent, ID_BUTTON_SLICE, "Slice", wx.DefaultPosition, wx.DefaultSize, 0 )
    item34.SetName( "ProcessButton" )
    item33.Add( item34, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item35 = wx.Gauge( parent, ID_GAUGE_PROGRESS, 100, wx.DefaultPosition, [100,10], 0 )
    item35.SetName( "ProgressBar" )
    item33.Add( item35, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item33, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_BUTTON_DEFAULT_PATH = 10049
ID_TEXTCTRL_DEFAULT_PATH = 10050
ID_BUTTON_DEFAULT_EXPORT_PATH = 10051
ID_TEXTCTRL_EXPORT_PATH = 10052
ID_BUTTON_RENDER_PATH = 10053
ID_TEXTCTRL_RENDER_PATH = 10054
ID_BUTTON_WAV_PATH = 10055
ID_TEXTCTRL_WAV_PATH = 10056
ID_BUTTON_BATCHFILE_PATH = 10057
ID_TEXTCTRL_BATCH_PATH = 10058
ID_BUTTON_TEMP_PATH = 10059
ID_TEXTCTRL_TEMP_DIR = 10060
ID_BUTTON_BACKUP_PATH = 10061
ID_TEXTCTRL_BACKUP_DIR = 10062
ID_CHOICE_DEFAULTPLAYER = 10063
ID_CHOICE_DEFAULTRENDERER = 10064
ID_CHOICE_AUDIODEVICE = 10065
ID_CHECKBOX_UNFOLDEMPTY = 10066
ID_CHECKBOX_AUTOUPDATES = 10067
ID_BUTTON_OK = 10068
ID_BUTTON_CANCEL = 10069

def PreferencesDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.StaticBox( parent, -1, "Path Settings" )
    item1 = wx.StaticBoxSizer( item2, wx.VERTICAL )
    
    item3 = wx.FlexGridSizer( 0, 2, 0, 0 )
    
    item4 = wx.Button( parent, ID_BUTTON_DEFAULT_PATH, "Default IT Path", wx.DefaultPosition, wx.DefaultSize, 0 )
    item4.SetName( "DefaultPathButton" )
    item3.Add( item4, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item5 = wx.TextCtrl( parent, ID_TEXTCTRL_DEFAULT_PATH, "", wx.DefaultPosition, [300,-1], 0 )
    item5.SetName( "DefaultPath" )
    item3.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6 = wx.Button( parent, ID_BUTTON_DEFAULT_EXPORT_PATH, "Default Export Path", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.SetName( "ExportPathButton" )
    item3.Add( item6, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item7 = wx.TextCtrl( parent, ID_TEXTCTRL_EXPORT_PATH, "", wx.DefaultPosition, [300,-1], 0 )
    item7.SetName( "ExportPath" )
    item3.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item8 = wx.Button( parent, ID_BUTTON_RENDER_PATH, "Default Render Path", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.TextCtrl( parent, ID_TEXTCTRL_RENDER_PATH, "", wx.DefaultPosition, [300,-1], 0 )
    item9.SetName( "RenderPath" )
    item3.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.Button( parent, ID_BUTTON_WAV_PATH, "Default WAV Path", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item10, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item11 = wx.TextCtrl( parent, ID_TEXTCTRL_WAV_PATH, "", wx.DefaultPosition, [300,-1], 0 )
    item11.SetName( "WAVPath" )
    item3.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.Button( parent, ID_BUTTON_BATCHFILE_PATH, "Batchfile Path", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item12, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item13 = wx.TextCtrl( parent, ID_TEXTCTRL_BATCH_PATH, "", wx.DefaultPosition, [300,-1], 0 )
    item13.SetName( "BatchfilePath" )
    item3.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item14 = wx.Button( parent, ID_BUTTON_TEMP_PATH, "Temp Files", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item14, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item15 = wx.TextCtrl( parent, ID_TEXTCTRL_TEMP_DIR, "", wx.DefaultPosition, [300,-1], 0 )
    item15.SetName( "TempPath" )
    item3.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item16 = wx.Button( parent, ID_BUTTON_BACKUP_PATH, "Backup Files", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item16, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item17 = wx.TextCtrl( parent, ID_TEXTCTRL_BACKUP_DIR, "", wx.DefaultPosition, [300,-1], 0 )
    item17.SetName( "BackupPath" )
    item3.Add( item17, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item3, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item19 = wx.StaticBox( parent, -1, "Output" )
    item18 = wx.StaticBoxSizer( item19, wx.VERTICAL )
    
    item20 = wx.BoxSizer( wx.HORIZONTAL )
    
    item21 = wx.StaticText( parent, ID_TEXT, "Default Playback Engine", wx.DefaultPosition, wx.DefaultSize, 0 )
    item20.Add( item21, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item22 = wx.Choice( parent, ID_CHOICE_DEFAULTPLAYER, wx.DefaultPosition, [300,-1], [], 0 )
    item22.SetToolTip( wx.ToolTip("The default player used to play songs") )
    item22.SetName( "DefaultPlayer" )
    item20.Add( item22, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item18.Add( item20, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item23 = wx.BoxSizer( wx.HORIZONTAL )
    
    item24 = wx.StaticText( parent, ID_TEXT, "Default Renderer", wx.DefaultPosition, wx.DefaultSize, 0 )
    item23.Add( item24, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item25 = wx.Choice( parent, ID_CHOICE_DEFAULTRENDERER, wx.DefaultPosition, [300,-1], [], 0 )
    item25.SetToolTip( wx.ToolTip("The default sound engine to use when mixing songs to WAV") )
    item25.SetName( "DefaultRenderer" )
    item23.Add( item25, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item18.Add( item23, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item26 = wx.BoxSizer( wx.HORIZONTAL )
    
    item27 = wx.StaticText( parent, ID_TEXT, "Audio Output Device", wx.DefaultPosition, wx.DefaultSize, 0 )
    item26.Add( item27, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item28 = wx.Choice( parent, ID_CHOICE_AUDIODEVICE, wx.DefaultPosition, [300,-1], [], 0 )
    item28.SetName( "AudioDeviceNum" )
    item26.Add( item28, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item18.Add( item26, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item0.Add( item18, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item30 = wx.StaticBox( parent, -1, "Misc" )
    item29 = wx.StaticBoxSizer( item30, wx.VERTICAL )
    
    item31 = wx.CheckBox( parent, ID_CHECKBOX_UNFOLDEMPTY, "Unfold Empty Order Lists when Loading", wx.DefaultPosition, wx.DefaultSize, 0 )
    item31.SetValue( True )
    item31.SetToolTip( wx.ToolTip("Create a linear order list if the loaded module has none") )
    item31.SetName( "UnfoldEmptyOrderLists" )
    item29.Add( item31, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item32 = wx.CheckBox( parent, ID_CHECKBOX_AUTOUPDATES, "Check for Updates when Program Starts", wx.DefaultPosition, wx.DefaultSize, 0 )
    item32.SetValue( True )
    item32.SetName( "CheckUpdates" )
    item29.Add( item32, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item29, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item33 = wx.BoxSizer( wx.HORIZONTAL )
    
    item34 = wx.Button( parent, ID_BUTTON_OK, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item34.SetName( "OKButton" )
    item33.Add( item34, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item35 = wx.Button( parent, ID_BUTTON_CANCEL, "Cancel", wx.DefaultPosition, wx.DefaultSize, 0 )
    item35.SetName( "CancelButton" )
    item33.Add( item35, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item33, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_TEXTCTRL = 10070
ID_BUTTON_SENDERROR = 10071
ID_BUTTON_EXIT = 10072

def ErrorSendDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.StaticText( parent, ID_TEXT, 
        "An error occured.  If you are currently connected to the Internet, you can send information about the error to Magicfish Software\n"
        "by clicking the Send button.  Error information has also been logged to postmod.log, which you can email to support@magicfish.net\n"
        "if the problem persists.\n"
        "",
        wx.DefaultPosition, wx.DefaultSize, 0 )
    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2 = wx.BoxSizer( wx.HORIZONTAL )
    
    item3 = wx.StaticText( parent, ID_TEXT, "Error Information:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Add( item3, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item4 = wx.TextCtrl( parent, ID_TEXTCTRL, "", wx.DefaultPosition, [360,110], wx.TE_MULTILINE|wx.TE_READONLY )
    item2.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item5 = wx.BoxSizer( wx.HORIZONTAL )
    
    item6 = wx.Button( parent, ID_BUTTON_SENDERROR, "Send", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.Button( parent, ID_BUTTON_CANCEL, "Cancel", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item8 = wx.Button( parent, ID_BUTTON_EXIT, "Exit", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0


def ErrorDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.StaticText( parent, ID_TEXT, 
        "An error occured.  If you are currently connected to the Internet,  information about the error has been sent to Magicfish Software.\n"
        "Error information has also been logged to postmod.log, which you can email to support@magicfish.net if the problem persists.",
        wx.DefaultPosition, wx.DefaultSize, 0 )
    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2 = wx.BoxSizer( wx.HORIZONTAL )
    
    item3 = wx.StaticText( parent, ID_TEXT, "Error Information:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Add( item3, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item4 = wx.TextCtrl( parent, ID_TEXTCTRL, "", wx.DefaultPosition, [360,100], wx.TE_MULTILINE|wx.TE_READONLY )
    item2.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item5 = wx.BoxSizer( wx.HORIZONTAL )
    
    item6 = wx.Button( parent, ID_BUTTON_OK, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.Button( parent, ID_BUTTON_EXIT, "Exit", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0


def GenericSimpleDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.HORIZONTAL )
    
    item1 = wx.BoxSizer( wx.VERTICAL )
    parent.GenericDynamicSizer = item1
    
    item2 = wx.BoxSizer( wx.HORIZONTAL )
    
    item3 = wx.Button( parent, ID_BUTTON_EXPORT_PATH, "Export File", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4 = wx.TextCtrl( parent, ID_TEXTCTRL_EXPORTPATH, "", wx.DefaultPosition, [160,-1], 0 )
    item4.SetName( "ExportPath" )
    item2.Add( item4, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item1.Add( item2, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item5 = wx.BoxSizer( wx.VERTICAL )
    parent.GenericProcessorButtonsSizer = item5
    
    item6 = wx.Button( parent, ID_BUTTON_PREVIEW, "Preview", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.SetName( "PreviewButton" )
    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.Button( parent, ID_BUTTON_PROCESS, "Process", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.SetName( "ProcessButton" )
    item5.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item8 = wx.Gauge( parent, ID_GAUGE_EXPORT, 100, wx.DefaultPosition, [100,10], 0 )
    item8.SetName( "ExportGauge" )
    item5.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.Gauge( parent, ID_GAUGE_SUBPROGRESS, 100, wx.DefaultPosition, [100,10], 0 )
    item9.SetName( "ExportGauge" )
    item5.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_TEXT_TOP = 10073
ID_TEXT_STATUS = 10074

def FileDownloadDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.BoxSizer( wx.HORIZONTAL )
    
    item2 = wx.StaticText( parent, ID_TEXT_TOP, "Downloading postmod-update-04-05.exe", wx.DefaultPosition, wx.DefaultSize, 0 )
    item1.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3 = wx.BoxSizer( wx.HORIZONTAL )
    
    item4 = wx.Gauge( parent, ID_GAUGE_PROGRESS, 100, wx.DefaultPosition, [300,20], 0 )
    item3.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item5 = wx.BoxSizer( wx.HORIZONTAL )
    
    item6 = wx.GridSizer( 0, 2, 0, 130 )
    
    item7 = wx.StaticText( parent, ID_TEXT_STATUS, "0k of 0k", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item7, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item8 = wx.Button( parent, ID_BUTTON_CANCEL, "Cancel", wx.DefaultPosition, [-1,20], 0 )
    item6.Add( item8, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item5.Add( item6, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item5, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_CHOICE_RENDERER = 10075
ID_CHOICE_SAMPLERATE = 10076
ID_CHOICE_BITRATE = 10077
ID_CHECKBOX_NORMALIZE = 10078
ID_SPINCTRL_AMPLIFY = 10079
ID_CHOICE_INTERPOLATION = 10080
ID_CHOICE_VOLRAMP = 10081
ID_CHECKBOX_USECURRENTVOLUMES = 10082

def RenderOptionsVerticalFunc( parent, call_fit = True, set_sizer = True ):
    item1 = wx.StaticBox( parent, -1, "Render Options" )
    item0 = wx.StaticBoxSizer( item1, wx.VERTICAL )
    
    item2 = wx.Choice( parent, ID_CHOICE_RENDERER, wx.DefaultPosition, [120,-1], 
        ["Modplug 1.16","BASS 2.0","DUMB 0.9.2","Mikmod 3.0.3"] , 0 )
    item2.SetName( "Renderer" )
    item0.Add( item2, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item3 = wx.BoxSizer( wx.HORIZONTAL )
    
    item4 = wx.Choice( parent, ID_CHOICE_SAMPLERATE, wx.DefaultPosition, wx.DefaultSize, 
        ["8000","11025","22050","32000","44100","48000","88200","96000"] , 0 )
    item4.SetName( "SampleRate" )
    item3.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item5 = wx.Choice( parent, ID_CHOICE_BITRATE, wx.DefaultPosition, wx.DefaultSize, 
        ["16 bit","32 bit IEEE"] , 0 )
    item5.SetName( "BitRate" )
    item3.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item3, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item6 = wx.CheckBox( parent, ID_CHECKBOX_NORMALIZE, "Normalize Amplification", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.SetValue( True )
    item6.SetToolTip( wx.ToolTip("If checked, the highest volume that doesn't cause clipping will be used.") )
    item6.SetName( "Normalize" )
    item0.Add( item6, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item7 = wx.BoxSizer( wx.HORIZONTAL )
    
    item8 = wx.StaticText( parent, ID_TEXT, "Amplify %", wx.DefaultPosition, wx.DefaultSize, 0 )
    item8.SetToolTip( wx.ToolTip("Setting amplify too high may cause clipping. Use normalize to protect against clipping.") )
    item7.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.SpinCtrl( parent, ID_SPINCTRL_AMPLIFY, "50", wx.DefaultPosition, [50,-1], 0, 0, 100, 50 )
    item9.SetName( "Amplify" )
    item7.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item10 = wx.BoxSizer( wx.HORIZONTAL )
    
    item11 = wx.StaticText( parent, ID_TEXT, "Interpolation:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item10.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.Choice( parent, ID_CHOICE_INTERPOLATION, wx.DefaultPosition, [60,-1], 
        ["None","Linear"] , 0 )
    item12.SetToolTip( wx.ToolTip("Interpolation mode (type of resampling used)") )
    item12.SetName( "InterpolationMode" )
    item10.Add( item12, 1, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item10, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item13 = wx.BoxSizer( wx.HORIZONTAL )
    
    item14 = wx.StaticText( parent, ID_TEXT, "Vol. Ramp:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item13.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item15 = wx.Choice( parent, ID_CHOICE_VOLRAMP, wx.DefaultPosition, [60,-1], 
        ["None","Normal","Smoother"] , 0 )
    item15.SetName( "VolumeRampMode" )
    item13.Add( item15, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item13, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item16 = wx.CheckBox( parent, ID_CHECKBOX_USECURRENTVOLUMES, "Keep Mute/Solo", wx.DefaultPosition, wx.DefaultSize, 0 )
    item16.SetValue( True )
    item16.SetName( "UseCurrentVolumes" )
    item0.Add( item16, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0


def PleaseWaitDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.StaticText( parent, ID_TEXT, "                             Please wait...                             ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item0.Add( item1, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item2 = wx.Button( parent, ID_BUTTON, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Enable(False)
    item0.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_LISTBOX = 10083
ID_SPINCTRL = 10084

def TestCommandAlgoDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.HORIZONTAL )
    
    item1 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.StaticText( parent, ID_TEXT, "Commands", wx.DefaultPosition, wx.DefaultSize, 0 )
    item1.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3 = wx.ListBox( parent, ID_LISTBOX, wx.DefaultPosition, [80,350], 
        ["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"] , wx.LB_MULTIPLE )
    item1.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4 = wx.BoxSizer( wx.VERTICAL )
    
    item5 = wx.BoxSizer( wx.HORIZONTAL )
    
    item6 = wx.StaticText( parent, ID_TEXT, "Min", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [100,-1], 0, 0, 100, 0 )
    item5.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item8 = wx.BoxSizer( wx.HORIZONTAL )
    
    item9 = wx.StaticText( parent, ID_TEXT, "Max", wx.DefaultPosition, wx.DefaultSize, 0 )
    item8.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [100,-1], 0, 0, 100, 0 )
    item8.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item11 = wx.BoxSizer( wx.HORIZONTAL )
    
    item12 = wx.StaticText( parent, ID_TEXT, "Step", wx.DefaultPosition, wx.DefaultSize, 0 )
    item11.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item13 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [100,-1], 0, 0, 100, 0 )
    item11.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_NOTEBOOK = 10085

def FileBatchMultiDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.Notebook( parent, ID_NOTEBOOK, wx.DefaultPosition, [200,160], wx.NB_BOTTOM )
    item1 = wx.NotebookSizer( item2 )

    item0.Add( item1, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0


def ITSelectionDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.HORIZONTAL )
    
    item1 = wx.ListBox( parent, ID_LISTBOX, wx.DefaultPosition, [80,100], 
        ["Track 1","Track 2","Track 3","Track 4","Track 5","Track 6"] , wx.LB_MULTIPLE )
    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2 = wx.ListBox( parent, ID_LISTBOX, wx.DefaultPosition, [80,100], 
        ["Pattern 1","Pattern 2","Pattern 3","Pattern 4","Pattern 5"] , wx.LB_MULTIPLE )
    item0.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3 = wx.ListBox( parent, ID_LISTBOX, wx.DefaultPosition, [80,100], 
        ["ListItem"] , wx.LB_SINGLE )
    item0.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_BUTTON_REGISTER = 10086

def DemoExpiredDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.StaticText( parent, ID_TEXT, 
        "Sorry, this trial version has expired.  Please consider registering Magicfish Postmod for $20 US.\n"
        "Registration enables all features, including full batch processing of all processes.\n"
        "\n"
        "To register, visit http://www.magicfish.net, or use the Register button below if you are currently connected\n"
        "to the Internet.",
        wx.DefaultPosition, wx.DefaultSize, 0 )
    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2 = wx.BoxSizer( wx.HORIZONTAL )
    
    item3 = wx.Button( parent, ID_BUTTON_REGISTER, "Register Now", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4 = wx.Button( parent, ID_BUTTON_CANCEL, "Cancel", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_SLIDER_HARDWARE = 10087
ID_SLIDER_SONGS = 10088
ID_SLIDER_SAMPLES = 10089

def MixerFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.StaticBox( parent, -1, "Playback Options" )
    item1 = wx.StaticBoxSizer( item2, wx.HORIZONTAL )
    
    item3 = wx.Choice( parent, ID_CHOICE_RENDERER, wx.DefaultPosition, [100,-1], 
        ["Modplug 1.16","BASS 2.0"] , 0 )
    item3.SetName( "Renderer" )
    item1.Add( item3, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item4 = wx.BoxSizer( wx.HORIZONTAL )
    
    item5 = wx.Choice( parent, ID_CHOICE_SAMPLERATE, wx.DefaultPosition, wx.DefaultSize, 
        ["8000","11025","22050","32000","44100","48000","88200","96000"] , 0 )
    item5.SetName( "SampleRate" )
    item4.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6 = wx.Choice( parent, ID_CHOICE_BITRATE, wx.DefaultPosition, wx.DefaultSize, 
        ["16 bit","32 bit"] , 0 )
    item6.SetName( "BitRate" )
    item4.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item4, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item7 = wx.BoxSizer( wx.HORIZONTAL )
    
    item8 = wx.Choice( parent, ID_CHOICE_INTERPOLATION, wx.DefaultPosition, [70,-1], 
        ["None","Linear"] , 0 )
    item8.SetToolTip( wx.ToolTip("Interpolation mode (type of resampling used)") )
    item8.SetName( "InterpolationMode" )
    item7.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item7, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item0.Add( item1, 0, wx.GROW|wx.ALL, 5 )

    item10 = wx.StaticBox( parent, -1, "Global Volumes" )
    item9 = wx.StaticBoxSizer( item10, wx.VERTICAL )
    
    item11 = wx.BoxSizer( wx.HORIZONTAL )
    
    item12 = wx.StaticText( parent, ID_TEXT, "Device", wx.DefaultPosition, wx.DefaultSize, 0 )
    item11.Add( item12, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item13 = wx.Slider( parent, ID_SLIDER_HARDWARE, 0, 0, 100, wx.DefaultPosition, [250,25], wx.SL_HORIZONTAL )
    item13.SetName( "HardwareSlider" )
    item11.Add( item13, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item9.Add( item11, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item14 = wx.BoxSizer( wx.HORIZONTAL )
    
    item15 = wx.StaticText( parent, ID_TEXT, "Song Level", wx.DefaultPosition, wx.DefaultSize, 0 )
    item14.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item16 = wx.Slider( parent, ID_SLIDER_SONGS, 0, 0, 100, wx.DefaultPosition, [250,25], wx.SL_HORIZONTAL )
    item16.SetName( "SongSlider" )
    item16.Enable(False)
    item14.Add( item16, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item9.Add( item14, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item17 = wx.BoxSizer( wx.HORIZONTAL )
    
    item18 = wx.StaticText( parent, ID_TEXT, "Samples", wx.DefaultPosition, wx.DefaultSize, 0 )
    item17.Add( item18, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item19 = wx.Slider( parent, ID_SLIDER_SAMPLES, 0, 0, 100, wx.DefaultPosition, [250,25], wx.SL_HORIZONTAL )
    item19.SetName( "SampleSlider" )
    item17.Add( item19, 1, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9.Add( item17, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item0.Add( item9, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_RADIOBUTTON = 10090

def SampleExport2Func( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.HORIZONTAL )
    
    item1 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.BoxSizer( wx.HORIZONTAL )
    
    item3 = wx.Button( parent, ID_BUTTON_EXPORT_PATH, "Export Path", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4 = wx.TextCtrl( parent, ID_TEXTCTRL_EXPORTPATH, "", wx.DefaultPosition, [180,-1], 0 )
    item4.SetName( "ExportPath" )
    item2.Add( item4, 0, wx.GROW|wx.ALL, 5 )

    item1.Add( item2, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item5 = wx.BoxSizer( wx.HORIZONTAL )
    
    item6 = wx.StaticText( parent, ID_TEXT, "Seperator", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.TextCtrl( parent, ID_TEXTCTRL_SEPERATOR, "-", wx.DefaultPosition, [40,-1], 0 )
    item7.SetName( "Seperator" )
    item5.Add( item7, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item8 = wx.StaticText( parent, ID_TEXT, "If Exists:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.Choice( parent, ID_CHOICE_EXISTING_FILES, wx.DefaultPosition, [100,-1], 
        ["Overwrite","Ignore","Rename"] , 0 )
    item9.SetName( "ExportMode" )
    item5.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item5, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item10 = wx.BoxSizer( wx.HORIZONTAL )
    
    item11 = wx.CheckBox( parent, ID_CHECKBOX_FILENAMEDIR, "Create Filename Dir", wx.DefaultPosition, wx.DefaultSize, 0 )
    item11.SetValue( True )
    item11.SetName( "CreateFilenameDir" )
    item10.Add( item11, 0, wx.ALL, 5 )

    item12 = wx.CheckBox( parent, ID_CHECKBOX_KEEPEXTENSION, "Filter Extensions", wx.DefaultPosition, wx.DefaultSize, 0 )
    item12.SetValue( True )
    item12.SetName( "FilterExtensions" )
    item10.Add( item12, 0, wx.ALL, 5 )

    item1.Add( item10, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL|wx.SHAPED, 0 )

    item13 = wx.BoxSizer( wx.HORIZONTAL )
    
    item15 = wx.StaticBox( parent, -1, "Naming Options" )
    item14 = wx.StaticBoxSizer( item15, wx.VERTICAL )
    
    item16 = wx.CheckBox( parent, ID_CHECKBOX_USESAMPLENAMES, "Use Sample Names", wx.DefaultPosition, wx.DefaultSize, 0 )
    item16.SetName( "UseSampleNames" )
    item14.Add( item16, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item17 = wx.CheckBox( parent, ID_CHECKBOX_USESAMPLEFILENAMES, "Use Sample Filenames", wx.DefaultPosition, wx.DefaultSize, 0 )
    item17.SetValue( True )
    item17.SetName( "UseSampleFilenames" )
    item14.Add( item17, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item18 = wx.CheckBox( parent, ID_CHECKBOX_USESAMPLENUMBERS, "Use Sample Numbers", wx.DefaultPosition, wx.DefaultSize, 0 )
    item18.SetName( "UseSampleNumbers" )
    item14.Add( item18, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item13.Add( item14, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 0 )

    item20 = wx.StaticBox( parent, -1, "Export Format" )
    item19 = wx.StaticBoxSizer( item20, wx.VERTICAL )
    
    item21 = wx.RadioButton( parent, ID_RADIOBUTTON, "WAV", wx.DefaultPosition, [110,-1], 0 )
    item19.Add( item21, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item22 = wx.RadioButton( parent, ID_RADIOBUTTON, "IT", wx.DefaultPosition, wx.DefaultSize, 0 )
    item19.Add( item22, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item23 = wx.RadioButton( parent, ID_RADIOBUTTON, "BMW", wx.DefaultPosition, wx.DefaultSize, 0 )
    item19.Add( item23, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item24 = wx.RadioButton( parent, ID_RADIOBUTTON, "XM", wx.DefaultPosition, wx.DefaultSize, 0 )
    item19.Add( item24, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item25 = wx.RadioButton( parent, ID_RADIOBUTTON, "FLP", wx.DefaultPosition, wx.DefaultSize, 0 )
    item19.Add( item25, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item13.Add( item19, 0, wx.GROW|wx.ALL, 0 )

    item1.Add( item13, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item27 = wx.StaticBox( parent, -1, "Output" )
    item26 = wx.StaticBoxSizer( item27, wx.HORIZONTAL )
    
    item28 = wx.ListBox( parent, ID_SAMPLE_EXPORT_PREVIEW_BOX, wx.DefaultPosition, [200,200], [], wx.LB_EXTENDED|wx.LB_HSCROLL|wx.LB_NEEDED_SB )
    item28.SetName( "OutputBox" )
    item26.Add( item28, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item26, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 0 )

    item29 = wx.BoxSizer( wx.VERTICAL )
    
    item30 = wx.Button( parent, ID_SAMPLE_EXPORT_PREVIEW_BUTTON, "Preview", wx.DefaultPosition, wx.DefaultSize, 0 )
    item30.SetName( "PreviewButton" )
    item29.Add( item30, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item31 = wx.Button( parent, ID_SAMPLE_EXPORT_EXPORT_BUTTON, "Export", wx.DefaultPosition, wx.DefaultSize, 0 )
    item31.SetName( "ExportButton" )
    item29.Add( item31, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item32 = wx.Gauge( parent, ID_GAUGE_EXPORT, 100, wx.DefaultPosition, [100,10], 0 )
    item32.SetName( "ExportGauge" )
    item29.Add( item32, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item29, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_GAUGE = 10091

def ITDocumentMultiFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.Notebook( parent, ID_NOTEBOOK, wx.DefaultPosition, [200,160], 0 )
    item1 = wx.NotebookSizer( item2 )

    item0.Add( item1, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item3 = wx.Gauge( parent, ID_GAUGE, 100, wx.DefaultPosition, [100,10], wx.GA_SMOOTH|wx.GA_PROGRESSBAR )
    item0.Add( item3, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_TEXTCTRL_NAME = 10092
ID_TEXTCTRL_EMAIL = 10093
ID_TEXTCTRL_KEY = 10094

def RegistrationDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.StaticBox( parent, -1, "Registration" )
    item1 = wx.StaticBoxSizer( item2, wx.VERTICAL )
    
    item3 = wx.BoxSizer( wx.HORIZONTAL )
    
    item4 = wx.StaticText( parent, ID_TEXT, "Name:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item5 = wx.TextCtrl( parent, ID_TEXTCTRL_NAME, "", wx.DefaultPosition, [300,-1], 0 )
    item5.SetName( "RegistrationName" )
    item3.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item3, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item6 = wx.BoxSizer( wx.HORIZONTAL )
    
    item7 = wx.StaticText( parent, ID_TEXT, "E-Mail:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item8 = wx.TextCtrl( parent, ID_TEXTCTRL_EMAIL, "", wx.DefaultPosition, [300,-1], 0 )
    item8.SetName( "RegistrationEmail" )
    item6.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item6, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item9 = wx.BoxSizer( wx.HORIZONTAL )
    
    item10 = wx.StaticText( parent, ID_TEXT, "Key:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item9.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item11 = wx.TextCtrl( parent, ID_TEXTCTRL_KEY, "", wx.DefaultPosition, [300,-1], 0 )
    item11.SetName( "RegistrationKey" )
    item9.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item1.Add( item9, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.StaticLine( parent, ID_LINE, wx.DefaultPosition, [20,-1], wx.LI_HORIZONTAL )
    item0.Add( item12, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item13 = wx.BoxSizer( wx.HORIZONTAL )
    
    item14 = wx.Button( parent, ID_BUTTON_OK, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item14.SetName( "OKButton" )
    item13.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item15 = wx.Button( parent, ID_BUTTON_CANCEL, "Cancel", wx.DefaultPosition, wx.DefaultSize, 0 )
    item13.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_SLIDER = 10095

def ITMixerTest( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item0.Add( item2, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item3 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item0.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item4 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item0.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item5 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item0.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item0.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item0.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item8 = wx.StaticText( parent, ID_TEXT, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item0.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_SLIDER_TRACK = 10096
ID_SPINCTRL_TRACK = 10097
ID_BUTTON_MUTE = 10098
ID_BUTTON_SOLO = 10099
ID_TEXT_TRACKNAME = 10100

def ITMixerTest2( parent, call_fit = True, set_sizer = True ):
    item1 = wx.StaticBox( parent, -1, "Mixer" )
    item0 = wx.StaticBoxSizer( item1, wx.HORIZONTAL )
    
    item3 = wx.StaticBox( parent, -1, "" )
    item2 = wx.StaticBoxSizer( item3, wx.VERTICAL )
    
    item4 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item2.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item5 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item2.Add( item5, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item6 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item2.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item2.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item8 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item2.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item2.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item2.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item11 = wx.StaticText( parent, ID_TEXT, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item2, 0, wx.ALL, 0 )

    item13 = wx.StaticBox( parent, -1, "" )
    item12 = wx.StaticBoxSizer( item13, wx.VERTICAL )
    
    item14 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item12.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item15 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item12.Add( item15, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item16 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item12.Add( item16, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item17 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item12.Add( item17, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item18 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item12.Add( item18, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item19 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item12.Add( item19, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item20 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item12.Add( item20, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item21 = wx.StaticText( parent, ID_TEXT, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item12.Add( item21, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item12, 0, wx.ALL, 0 )

    item23 = wx.StaticBox( parent, -1, "" )
    item22 = wx.StaticBoxSizer( item23, wx.VERTICAL )
    
    item24 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item22.Add( item24, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item25 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item22.Add( item25, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item26 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item22.Add( item26, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item27 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item22.Add( item27, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item28 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item22.Add( item28, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item29 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item22.Add( item29, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item30 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item22.Add( item30, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item31 = wx.StaticText( parent, ID_TEXT, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item22.Add( item31, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item22, 0, wx.ALL, 0 )

    item33 = wx.StaticBox( parent, -1, "" )
    item32 = wx.StaticBoxSizer( item33, wx.VERTICAL )
    
    item34 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item32.Add( item34, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item35 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item32.Add( item35, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item36 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item32.Add( item36, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item37 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item32.Add( item37, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item38 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item32.Add( item38, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item39 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item32.Add( item39, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item40 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item32.Add( item40, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item41 = wx.StaticText( parent, ID_TEXT, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item32.Add( item41, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item32, 0, wx.ALL, 0 )

    item43 = wx.StaticBox( parent, -1, "" )
    item42 = wx.StaticBoxSizer( item43, wx.VERTICAL )
    
    item44 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item42.Add( item44, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item45 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item42.Add( item45, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item46 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item42.Add( item46, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item47 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item42.Add( item47, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item48 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item42.Add( item48, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item49 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item42.Add( item49, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item50 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item42.Add( item50, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item51 = wx.StaticText( parent, ID_TEXT, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item42.Add( item51, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item42, 0, wx.ALL, 0 )

    item53 = wx.StaticBox( parent, -1, "" )
    item52 = wx.StaticBoxSizer( item53, wx.VERTICAL )
    
    item54 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item52.Add( item54, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item55 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item52.Add( item55, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item56 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item52.Add( item56, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item57 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item52.Add( item57, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item58 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item52.Add( item58, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item59 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item52.Add( item59, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item60 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item52.Add( item60, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item61 = wx.StaticText( parent, ID_TEXT, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item52.Add( item61, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item52, 0, wx.ALL, 0 )

    item63 = wx.StaticBox( parent, -1, "" )
    item62 = wx.StaticBoxSizer( item63, wx.VERTICAL )
    
    item64 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item62.Add( item64, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item65 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item62.Add( item65, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item66 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item62.Add( item66, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item67 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item62.Add( item67, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item68 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item62.Add( item68, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item69 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item62.Add( item69, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item70 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item62.Add( item70, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item71 = wx.StaticText( parent, ID_TEXT, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item62.Add( item71, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item62, 0, wx.ALL, 0 )

    item73 = wx.StaticBox( parent, -1, "" )
    item72 = wx.StaticBoxSizer( item73, wx.VERTICAL )
    
    item74 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item72.Add( item74, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item75 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item72.Add( item75, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item76 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item72.Add( item76, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item77 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item72.Add( item77, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item78 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item72.Add( item78, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item79 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item72.Add( item79, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item80 = wx.Slider( parent, ID_SLIDER, 0, 0, 100, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item72.Add( item80, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item81 = wx.StaticText( parent, ID_TEXT, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item72.Add( item81, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item72, 0, wx.ALL, 0 )

    item83 = wx.StaticBox( parent, -1, "" )
    item82 = wx.StaticBoxSizer( item83, wx.VERTICAL )
    
    item84 = wx.SpinCtrl( parent, ID_SPINCTRL, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item84.SetToolTip( wx.ToolTip("Pan") )
    item82.Add( item84, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item85 = wx.Slider( parent, ID_SLIDER, 32, 0, 64, wx.DefaultPosition, [50,-1], wx.SL_HORIZONTAL )
    item85.SetToolTip( wx.ToolTip("Pan") )
    item82.Add( item85, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item86 = wx.Slider( parent, ID_SLIDER_TRACK, 0, 0, 100, wx.DefaultPosition, wx.DefaultSize, wx.SL_VERTICAL )
    item86.SetName( "TrackVolume1" )
    item82.Add( item86, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item87 = wx.SpinCtrl( parent, ID_SPINCTRL_TRACK, "0", wx.DefaultPosition, [50,-1], 0, 0, 100, 0 )
    item87.SetToolTip( wx.ToolTip("Volume") )
    item87.SetName( "TrackVolumeEdit1" )
    item82.Add( item87, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item88 = wx.BoxSizer( wx.HORIZONTAL )
    
    item89 = wxToggleButton( parent, ID_BUTTON_MUTE, "M", wx.DefaultPosition, [20,-1], 0 )
    item89.SetFont( wx.Font( 12, wxSWISS, wx.NORMAL, wx.BOLD ) )
    item88.Add( item89, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item90 = wx.Button( parent, ID_BUTTON_SOLO, "S", wx.DefaultPosition, [20,-1], 0 )
    item90.SetFont( wx.Font( 12, wxSWISS, wx.NORMAL, wx.BOLD ) )
    item88.Add( item90, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item82.Add( item88, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item91 = wx.StaticText( parent, ID_TEXT_TRACKNAME, "Track 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item91.SetName( "TrackName" )
    item82.Add( item91, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item82, 0, wx.ALL, 0 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_CHECKBOX = 10101

def RenderOptions2Func( parent, call_fit = True, set_sizer = True ):
    item1 = wx.StaticBox( parent, -1, "Render Options" )
    item0 = wx.StaticBoxSizer( item1, wx.VERTICAL )
    
    item2 = wx.Choice( parent, ID_CHOICE_RENDERER, wx.DefaultPosition, wx.DefaultSize, 
        ["BASS 1.8","Mikmod 3.0.3"] , 0 )
    item2.SetName( "Renderer" )
    item0.Add( item2, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item3 = wx.GridSizer( 0, 2, 0, 0 )
    
    item4 = wx.CheckBox( parent, ID_CHECKBOX, "WAV", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item4, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item5 = wx.Button( parent, ID_BUTTON, "Settings", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item5, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item6 = wx.CheckBox( parent, ID_CHECKBOX, "MID", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item6, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item7 = wx.Button( parent, ID_BUTTON, "Settings", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item8 = wx.CheckBox( parent, ID_CHECKBOX, "IT", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item8, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item9 = wx.Button( parent, ID_BUTTON, "Settings", wx.DefaultPosition, wx.DefaultSize, 0 )
    item9.Enable(False)
    item3.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item0.Add( item3, 0, wx.ALIGN_CENTER_VERTICAL, 0 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_TEXT2 = 10102
ID_ITDOC_NAME = 10103
ID_TEXT1 = 10104
ID_ITDOC_FNAME = 10105
ID_TEXT_TEMPO = 10106
ID_SPINCTRL_TEMPO = 10107
ID_ITDOC_TICKS = 10108
ID_ITDOC_SPEED = 10109
ID_SPINCTRL_GLOBAL_VOLUME = 10110
ID_SPINCTRL_MIXING_VOLUME = 10111
ID_LISTBOX_SAMPLES = 10112
ID_LISTBOX_INSTRUMENTS = 10113
ID_LISTBOX_PATTERNS = 10114
ID_LISTBOX_TRACKS = 10115
ID_ORDERLIST = 10116
ID_BUTTON_PLAY = 10117
ID_BUTTON_STOP = 10118
ID_ITDOC_SAVE = 10119
ID_ITDOC_SAVEAS = 10120
ID_BUTTON_SPLIT = 10121
ID_BUTTON_EXPORT = 10122
ID_BUTTON_RENDER = 10123
ID_ITDOC_UNFOLD = 10124
ID_MENU_REMOVE_UNUSED_SAMPLES = 10125
ID_MENU_SLICEWAVTOIT = 10126
ID_TEXT_TIME = 10127
ID_VOLUME_SLIDER = 10128

def ITDocument2Dialog2Func( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.BoxSizer( wx.HORIZONTAL )
    
    item2 = wx.StaticText( parent, ID_TEXT2, "Song name", wx.DefaultPosition, wx.DefaultSize, 0 )
    item1.Add( item2, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item3 = wx.TextCtrl( parent, ID_ITDOC_NAME, "", wx.DefaultPosition, [240,-1], 0 )
    item3.SetName( "SongName" )
    item1.Add( item3, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item1, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item4 = wx.BoxSizer( wx.HORIZONTAL )
    
    item5 = wx.StaticText( parent, ID_TEXT1, "Filename    ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item4.Add( item5, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item6 = wx.TextCtrl( parent, ID_ITDOC_FNAME, "", wx.DefaultPosition, [240,-1], 0 )
    item6.SetName( "Filename" )
    item4.Add( item6, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item4, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item7 = wx.BoxSizer( wx.HORIZONTAL )
    
    item8 = wx.StaticText( parent, ID_TEXT_TEMPO, "Tempo", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item8, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item9 = wx.SpinCtrl( parent, ID_SPINCTRL_TEMPO, "140", wx.DefaultPosition, [50,-1], wx.SP_ARROW_KEYS, 32, 255, 140 )
    item9.SetName( "Tempo" )
    item7.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.StaticText( parent, ID_ITDOC_TICKS, "Ticks", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item11 = wx.SpinCtrl( parent, ID_ITDOC_SPEED, "6", wx.DefaultPosition, [50,-1], wx.SP_ARROW_KEYS, 1, 31, 6 )
    item11.SetName( "Ticks" )
    item7.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.StaticText( parent, ID_TEXT, "Global Vol", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item13 = wx.SpinCtrl( parent, ID_SPINCTRL_GLOBAL_VOLUME, "0", wx.DefaultPosition, [50,-1], 0, 0, 128, 0 )
    item13.SetName( "GlobalVolume" )
    item7.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item14 = wx.StaticText( parent, ID_TEXT, "Mixing Vol", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item15 = wx.SpinCtrl( parent, ID_SPINCTRL_MIXING_VOLUME, "0", wx.DefaultPosition, [50,-1], 0, 0, 128, 0 )
    item15.SetName( "MixingVolume" )
    item7.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item16 = wx.BoxSizer( wx.HORIZONTAL )
    parent.ITDocSelectionSizer = item16
    
    item18 = wx.StaticBox( parent, -1, "Samples" )
    item17 = wx.StaticBoxSizer( item18, wx.VERTICAL )
    
    from ctl_modulebox import ModuleBox
    parent.sampleListBox =     ModuleBox(parent, ID_LISTBOX_SAMPLES, wx.DefaultPosition, [120,150], wx.BORDER_SUNKEN|wx.LB_MULTIPLE)

    item19 = parent.FindWindowById( ID_LISTBOX_SAMPLES )
    item17.Add( item19, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item16.Add( item17, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item21 = wx.StaticBox( parent, -1, "Instruments" )
    item20 = wx.StaticBoxSizer( item21, wx.VERTICAL )
    
    parent.sampleListBox =     ModuleBox(parent, ID_LISTBOX_INSTRUMENTS, wx.DefaultPosition, [120,150], wx.BORDER_SUNKEN|wx.LB_MULTIPLE)

    item22 = parent.FindWindowById( ID_LISTBOX_INSTRUMENTS )
    item20.Add( item22, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item16.Add( item20, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item24 = wx.StaticBox( parent, -1, "Patterns" )
    item23 = wx.StaticBoxSizer( item24, wx.VERTICAL )
    
    parent.sampleListBox =     ModuleBox(parent, ID_LISTBOX_PATTERNS, wx.DefaultPosition, [120,150], wx.BORDER_SUNKEN|wx.LB_MULTIPLE)

    item25 = parent.FindWindowById( ID_LISTBOX_PATTERNS )
    item23.Add( item25, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item16.Add( item23, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item27 = wx.StaticBox( parent, -1, "Tracks" )
    item26 = wx.StaticBoxSizer( item27, wx.VERTICAL )
    
    parent.sampleListBox =     ModuleBox(parent, ID_LISTBOX_TRACKS, wx.DefaultPosition, [120,150], wx.BORDER_SUNKEN|wx.LB_MULTIPLE)

    item28 = parent.FindWindowById( ID_LISTBOX_TRACKS )
    item26.Add( item28, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item16.Add( item26, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item16, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item29 = wx.BoxSizer( wx.HORIZONTAL )
    
    item30 = wx.StaticText( parent, ID_TEXT, "Order List:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item29.Add( item30, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    from ctl_orderlist import OrderListControl
    parent.orderListControl =     OrderListControl(parent, ID_ORDERLIST)

    item31 = parent.FindWindowById( ID_ORDERLIST )
    item29.Add( item31, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item29, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item33 = wx.StaticBox( parent, -1, "" )
    item32 = wx.StaticBoxSizer( item33, wx.VERTICAL )
    
    item34 = wx.BoxSizer( wx.HORIZONTAL )
    
    item35 = wx.BitmapButton( parent, ID_BUTTON_PLAY, Toolbar1( 3 ), wx.DefaultPosition, wx.DefaultSize )
    item35.SetToolTip( wx.ToolTip("Play") )
    item35.SetName( "PlayButton" )
    item34.Add( item35, 0, wx.ALIGN_CENTER, 0 )

    item36 = wx.BitmapButton( parent, ID_BUTTON_STOP, Toolbar1( 4 ), wx.DefaultPosition, wx.DefaultSize )
    item36.SetToolTip( wx.ToolTip("Stop") )
    item36.SetName( "StopButton" )
    item34.Add( item36, 0, wx.ALIGN_CENTER, 0 )

    item34.Add( [ 10, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item37 = wx.BitmapButton( parent, ID_ITDOC_SAVE, Toolbar1( 7 ), wx.DefaultPosition, wx.DefaultSize )
    item37.SetToolTip( wx.ToolTip("Save File") )
    item37.SetName( "SaveButton" )
    item34.Add( item37, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item38 = wx.BitmapButton( parent, ID_ITDOC_SAVEAS, Toolbar1( 8 ), wx.DefaultPosition, wx.DefaultSize )
    item38.SetToolTip( wx.ToolTip("Save As") )
    item34.Add( item38, 0, wx.ALIGN_CENTER, 5 )

    item34.Add( [ 10, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item39 = wx.BitmapButton( parent, ID_BUTTON_SPLIT, Toolbar1( 22 ), wx.DefaultPosition, wx.DefaultSize )
    item39.SetToolTip( wx.ToolTip("Split/Render Sequences") )
    item34.Add( item39, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item40 = wx.BitmapButton( parent, ID_BUTTON_EXPORT, Toolbar1( 13 ), wx.DefaultPosition, wx.DefaultSize )
    item40.SetToolTip( wx.ToolTip("Export Samples") )
    item34.Add( item40, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item41 = wx.BitmapButton( parent, ID_BUTTON_RENDER, Toolbar1( 15 ), wx.DefaultPosition, wx.DefaultSize )
    item41.SetToolTip( wx.ToolTip("Render Song") )
    item34.Add( item41, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item34.Add( [ 10, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item42 = wx.BitmapButton( parent, ID_ITDOC_UNFOLD, Toolbar1( 16 ), wx.DefaultPosition, wx.DefaultSize )
    item42.SetToolTip( wx.ToolTip("Unfold Patterns") )
    item34.Add( item42, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item43 = wx.BitmapButton( parent, ID_MENU_REMOVE_UNUSED_SAMPLES, Toolbar1( 20 ), wx.DefaultPosition, wx.DefaultSize )
    item43.SetToolTip( wx.ToolTip("Removed Unused Samples") )
    item34.Add( item43, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item44 = wx.BitmapButton( parent, ID_MENU_SLICEWAVTOIT, Toolbar1( 21 ), wx.DefaultPosition, wx.DefaultSize )
    item44.SetToolTip( wx.ToolTip("Slice a WAV into the sample table.") )
    item34.Add( item44, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item34.Add( [ 10, 20 ] , 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item45 = wx.StaticText( parent, ID_TEXT_TIME, "00:00", wx.DefaultPosition, wx.DefaultSize, 0 )
    item45.SetName( "TimePosition" )
    item34.Add( item45, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item46 = wx.StaticText( parent, ID_TEXT_STATUS, "000:000", wx.DefaultPosition, wx.DefaultSize, 0 )
    item46.SetName( "StatusText" )
    item34.Add( item46, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item47 = wx.Slider( parent, ID_VOLUME_SLIDER, 0, 0, 100, wx.DefaultPosition, [100,-1], wx.SL_HORIZONTAL )
    item47.SetName( "VolumeSlider" )
    item34.Add( item47, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item32.Add( item34, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item0.Add( item32, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_COMBO_PRESET = 10129
wxID_OK = 5100

def PluginDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.HORIZONTAL )
    
    item1 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.BoxSizer( wx.HORIZONTAL )
    
    item3 = wx.StaticText( parent, ID_TEXT, "Preset", wx.DefaultPosition, wx.DefaultSize, 0 )
    item2.Add( item3, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item4 = wx.ComboBox( parent, ID_COMBO_PRESET, "", wx.DefaultPosition, [100,-1], [], wx.CB_DROPDOWN )
    item4.SetName( "Preset" )
    item2.Add( item4, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item1.Add( item2, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item5 = wx.BoxSizer( wx.VERTICAL )
    parent.PresetSizer = item5
    
    item1.Add( item5, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item1, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item6 = wx.BoxSizer( wx.VERTICAL )
    
    item7 = wx.Button( parent, wxID_OK, "OK", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item8 = wx.Button( parent, ID_BUTTON, "Cancel", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item9 = wx.Gauge( parent, ID_GAUGE, 100, wx.DefaultPosition, [100,10], 0 )
    item6.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6.Add( [ 20, 10 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.Button( parent, ID_BUTTON, "Help", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6.Add( [ 20, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item11 = wx.Button( parent, ID_BUTTON, "Save As...", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.Button( parent, ID_BUTTON, "Randomize", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item13 = wx.Button( parent, ID_BUTTON, "Delete", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6.Add( [ 20, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item14 = wx.Button( parent, ID_BUTTON, "Preview", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item6.Add( [ 20, 20 ] , 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item15 = wx.Button( parent, ID_BUTTON, "Selection...", wx.DefaultPosition, wx.DefaultSize, 0 )
    item6.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0


def ModMixerFunc( parent, call_fit = True, set_sizer = True ):
    item1 = wx.StaticBox( parent, -1, "" )
    item0 = wx.StaticBoxSizer( item1, wx.HORIZONTAL )
    parent.MixerSizer = item0
    
    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_CHECKBOX_CREATEFILENAMEDIR = 10130
ID_CHECKBOX_FILTER_EXTENSIONS = 10131
ID_CHECKBOX_PADZEROES = 10132
ID_SPLIT1_CHOICE = 10133
ID_SPLIT2_CHOICE = 10134
ID_SPLIT3_CHOICE = 10135
ID_TEXTCTRL_PATTERNPREFIX = 10136
ID_TEXTCTRL_TRACK_PREFIX = 10137
ID_TEXTCTRL_INSPREFIX = 10138
ID_CHECKBOX_EXPORT_OPTIMIZE = 10139
ID_CHECKBOX_ORDERSONLY = 10140
ID_CHECKBOX_KEEPINTER = 10141
ID_CHECKBOX_KEEPITS = 10142
ID_CHECKBOX_INSTRVOLUMES = 10143
ID_CHECKBOX_TRACK_DISABLE = 10144
ID_CHECKBOX_VEGAS = 10145
ID_CHECKBOX_LOOPCOUNT = 10146
ID_SPINCTRL_LOOPCOUNT = 10147
ID_CHECKBOX_NORMPARENT = 10148
ID_CHECKBOX_RENDER = 10149
ID_CHOICE_INTERPOL = 10150
ID_CHECKBOX_SLICE = 10151
ID_SPINCTRL_SLICE = 10152
ID_TEXTCTRL_KEEPSLICES = 10153
ID_SPLITTER_PREVIEW_BOX = 10154
ID_SPLITTER_PREVIEW_BUTTON = 10155
ID_SPLITTER_SPLIT_BUTTON = 10156
ID_GAUGE_RENDER = 10157

def ITSplitterDialogFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.HORIZONTAL )
    
    item1 = wx.BoxSizer( wx.VERTICAL )
    
    item2 = wx.BoxSizer( wx.HORIZONTAL )
    
    item4 = wx.StaticBox( parent, -1, "Export" )
    item3 = wx.StaticBoxSizer( item4, wx.VERTICAL )
    
    item5 = wx.BoxSizer( wx.HORIZONTAL )
    
    item6 = wx.Button( parent, ID_BUTTON_EXPORT_PATH, "Export Path", wx.DefaultPosition, wx.DefaultSize, 0 )
    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item7 = wx.TextCtrl( parent, ID_TEXTCTRL_EXPORTPATH, "", wx.DefaultPosition, [150,-1], 0 )
    item7.SetName( "ExportPath" )
    item5.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3.Add( item5, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item8 = wx.BoxSizer( wx.HORIZONTAL )
    
    item9 = wx.CheckBox( parent, ID_CHECKBOX_CREATEFILENAMEDIR, "Create Filename Dir", wx.DefaultPosition, wx.DefaultSize, 0 )
    item9.SetValue( True )
    item9.SetToolTip( wx.ToolTip("If checked, create new directory based on filename") )
    item9.SetName( "CreateFilenameDir" )
    item8.Add( item9, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item10 = wx.CheckBox( parent, ID_CHECKBOX_FILTER_EXTENSIONS, "Prepend Filename", wx.DefaultPosition, wx.DefaultSize, 0 )
    item10.SetValue( True )
    item10.SetToolTip( wx.ToolTip("If checked, current filename is kept as part of new filenames") )
    item10.SetName( "PrependFilename" )
    item8.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3.Add( item8, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item11 = wx.BoxSizer( wx.HORIZONTAL )
    
    item12 = wx.CheckBox( parent, ID_CHECKBOX_PADZEROES, "Pad Zeroes", wx.DefaultPosition, wx.DefaultSize, 0 )
    item12.SetValue( True )
    item12.SetToolTip( wx.ToolTip("Pad split number with zeroes") )
    item12.SetName( "PadZeroes" )
    item11.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3.Add( item11, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item13 = wx.BoxSizer( wx.HORIZONTAL )
    
    item14 = wx.StaticText( parent, ID_TEXT, "If Exists:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item13.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item15 = wx.Choice( parent, ID_CHOICE_EXISTING_FILES, wx.DefaultPosition, [100,-1], 
        ["Overwrite","Ignore","Rename"] , 0 )
    item15.SetName( "ExportMode" )
    item13.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item3.Add( item13, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item2.Add( item3, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 0 )

    item17 = wx.StaticBox( parent, -1, "Split" )
    item16 = wx.StaticBoxSizer( item17, wx.VERTICAL )
    
    item18 = wx.BoxSizer( wx.HORIZONTAL )
    
    item19 = wx.StaticText( parent, ID_TEXT, "Split 1", wx.DefaultPosition, wx.DefaultSize, 0 )
    item18.Add( item19, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item20 = wx.Choice( parent, ID_SPLIT1_CHOICE, wx.DefaultPosition, [100,-1], 
        ["Track","Instrument","Pattern",""] , 0 )
    item20.SetName( "Split1" )
    item18.Add( item20, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item16.Add( item18, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item21 = wx.BoxSizer( wx.HORIZONTAL )
    
    item22 = wx.StaticText( parent, ID_TEXT, "Split 2", wx.DefaultPosition, wx.DefaultSize, 0 )
    item21.Add( item22, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item23 = wx.Choice( parent, ID_SPLIT2_CHOICE, wx.DefaultPosition, [100,-1], 
        ["Track","Instrument","Pattern",""] , 0 )
    item23.SetName( "Split2" )
    item21.Add( item23, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item16.Add( item21, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item24 = wx.BoxSizer( wx.HORIZONTAL )
    
    item25 = wx.StaticText( parent, ID_TEXT, "Split 3", wx.DefaultPosition, wx.DefaultSize, 0 )
    item24.Add( item25, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item26 = wx.Choice( parent, ID_SPLIT3_CHOICE, wx.DefaultPosition, [100,-1], 
        ["Track","Instrument","Pattern",""] , 0 )
    item26.SetName( "Split3" )
    item24.Add( item26, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item16.Add( item24, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item16.Add( [ 20, 10 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item2.Add( item16, 0, wx.ALL, 0 )

    item1.Add( item2, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item27 = wx.BoxSizer( wx.HORIZONTAL )
    
    item29 = wx.StaticBox( parent, -1, "Prefixes" )
    item28 = wx.StaticBoxSizer( item29, wx.VERTICAL )
    
    item30 = wx.BoxSizer( wx.HORIZONTAL )
    
    item31 = wx.StaticText( parent, ID_TEXT, "Pattern Prefix", wx.DefaultPosition, wx.DefaultSize, 0 )
    item30.Add( item31, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item32 = wx.TextCtrl( parent, ID_TEXTCTRL_PATTERNPREFIX, "p", wx.DefaultPosition, [40,-1], 0 )
    item32.SetName( "PatternPrefix" )
    item30.Add( item32, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item28.Add( item30, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item33 = wx.BoxSizer( wx.HORIZONTAL )
    
    item34 = wx.StaticText( parent, ID_TEXT, "Track Prefix", wx.DefaultPosition, wx.DefaultSize, 0 )
    item33.Add( item34, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item35 = wx.TextCtrl( parent, ID_TEXTCTRL_TRACK_PREFIX, "t", wx.DefaultPosition, [40,-1], 0 )
    item35.SetName( "TrackPrefix" )
    item33.Add( item35, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item28.Add( item33, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item36 = wx.BoxSizer( wx.HORIZONTAL )
    
    item37 = wx.StaticText( parent, ID_TEXT, "Instrument Prefix", wx.DefaultPosition, wx.DefaultSize, 0 )
    item36.Add( item37, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item38 = wx.TextCtrl( parent, ID_TEXTCTRL_INSPREFIX, "i", wx.DefaultPosition, [40,-1], 0 )
    item38.SetName( "InstrumentPrefix" )
    item36.Add( item38, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item28.Add( item36, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item39 = wx.BoxSizer( wx.HORIZONTAL )
    
    item40 = wx.StaticText( parent, ID_TEXT, "Seperator", wx.DefaultPosition, wx.DefaultSize, 0 )
    item39.Add( item40, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item41 = wx.TextCtrl( parent, ID_TEXTCTRL_SEPERATOR, "-", wx.DefaultPosition, [40,-1], 0 )
    item41.SetName( "Seperator" )
    item39.Add( item41, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item28.Add( item39, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item42 = wx.BoxSizer( wx.HORIZONTAL )
    
    item43 = wx.StaticText( parent, ID_TEXT, "File Prefix", wx.DefaultPosition, wx.DefaultSize, 0 )
    item42.Add( item43, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item44 = wx.TextCtrl( parent, ID_TEXTCTRL, "", wx.DefaultPosition, [40,-1], 0 )
    item44.SetName( "FilePrefix" )
    item42.Add( item44, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item28.Add( item42, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item45 = wx.BoxSizer( wx.HORIZONTAL )
    
    item46 = wx.StaticText( parent, ID_TEXT, "File Suffix", wx.DefaultPosition, wx.DefaultSize, 0 )
    item45.Add( item46, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item47 = wx.TextCtrl( parent, ID_TEXTCTRL, "", wx.DefaultPosition, [40,-1], 0 )
    item47.SetName( "FileSuffix" )
    item45.Add( item47, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item28.Add( item45, 1, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item27.Add( item28, 0, wx.GROW|wx.ALL, 0 )

    item49 = wx.StaticBox( parent, -1, "Options" )
    item48 = wx.StaticBoxSizer( item49, wx.VERTICAL )
    
    item50 = wx.BoxSizer( wx.HORIZONTAL )
    
    item51 = wx.CheckBox( parent, ID_CHECKBOX_EXPORT_OPTIMIZE, "Optimize", wx.DefaultPosition, wx.DefaultSize, 0 )
    item51.SetValue( True )
    item51.SetToolTip( wx.ToolTip("If this option is checked, the resulting IT files will have any unused samples removed") )
    item51.SetName( "Optimize" )
    item50.Add( item51, 0, wx.ALIGN_BOTTOM|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item48.Add( item50, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item52 = wx.BoxSizer( wx.HORIZONTAL )
    
    item53 = wx.CheckBox( parent, ID_CHECKBOX_ORDERSONLY, "Orders Only", wx.DefaultPosition, wx.DefaultSize, 0 )
    item53.SetValue( True )
    item53.SetToolTip( wx.ToolTip("If checked, only patterns in the orderlist will be used (unless the orderlist is blank)") )
    item53.SetName( "OrdersOnly" )
    item52.Add( item53, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item48.Add( item52, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item54 = wx.BoxSizer( wx.HORIZONTAL )
    
    item55 = wx.CheckBox( parent, ID_CHECKBOX_KEEPINTER, "Keep Intermediate", wx.DefaultPosition, wx.DefaultSize, 0 )
    item55.SetToolTip( wx.ToolTip("If you are splitting by more than one criteria at once (for example, by pattern and then by track), check this option to keep all of the intermediary files. ") )
    item55.SetName( "KeepIntermediate" )
    item54.Add( item55, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item48.Add( item54, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item56 = wx.BoxSizer( wx.HORIZONTAL )
    
    item57 = wx.CheckBox( parent, ID_CHECKBOX_KEEPITS, "Keep IT Files", wx.DefaultPosition, wx.DefaultSize, 0 )
    item57.SetToolTip( wx.ToolTip("When rendering WAVs, check this option to also keep the generated IT files.") )
    item57.SetName( "KeepITs" )
    item56.Add( item57, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item48.Add( item56, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item58 = wx.BoxSizer( wx.HORIZONTAL )
    
    item59 = wx.CheckBox( parent, ID_CHECKBOX_INSTRVOLUMES, "Use Instr. Volumes", wx.DefaultPosition, wx.DefaultSize, 0 )
    item59.SetValue( True )
    item59.SetToolTip( wx.ToolTip("Split/solo instruments via global volumes.") )
    item59.SetName( "UseInstrumentVolumes" )
    item58.Add( item59, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item48.Add( item58, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item60 = wx.BoxSizer( wx.HORIZONTAL )
    
    item61 = wx.CheckBox( parent, ID_CHECKBOX_TRACK_DISABLE, "Use Track Disable", wx.DefaultPosition, wx.DefaultSize, 0 )
    item61.SetValue( True )
    item61.SetToolTip( wx.ToolTip("Split/solo tracks by disabling others.") )
    item61.SetName( "UseTrackDisable" )
    item60.Add( item61, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item48.Add( item60, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item62 = wx.BoxSizer( wx.HORIZONTAL )
    
    item63 = wx.CheckBox( parent, ID_CHECKBOX_USECURRENTVOLUMES, "Keep Mute/Solo", wx.DefaultPosition, wx.DefaultSize, 0 )
    item63.SetValue( True )
    item63.SetToolTip( wx.ToolTip("If checked, render with current mute and solo settings") )
    item63.SetName( "UseCurrentVolumes" )
    item62.Add( item63, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item48.Add( item62, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item64 = wx.BoxSizer( wx.HORIZONTAL )
    
    item65 = wx.CheckBox( parent, ID_CHECKBOX_VEGAS, "Vegas EDL", wx.DefaultPosition, wx.DefaultSize, 0 )
    item65.SetToolTip( wx.ToolTip("Exports Vegas 4.0 EDL project") )
    item65.SetName( "ExportVegas" )
    item64.Add( item65, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item48.Add( item64, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item66 = wx.BoxSizer( wx.HORIZONTAL )
    
    item67 = wx.CheckBox( parent, ID_CHECKBOX_LOOPCOUNT, "Loop:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item67.SetToolTip( wx.ToolTip("Repeats order list the specified number of times") )
    item67.SetName( "UseLoopCount" )
    item66.Add( item67, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item68 = wx.SpinCtrl( parent, ID_SPINCTRL_LOOPCOUNT, "2", wx.DefaultPosition, [50,-1], wx.SP_ARROW_KEYS, 2, 100, 2 )
    item68.SetName( "LoopCount" )
    item68.Enable(False)
    item66.Add( item68, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item48.Add( item66, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item69 = wx.BoxSizer( wx.HORIZONTAL )
    
    item70 = wx.CheckBox( parent, ID_CHECKBOX_NORMPARENT, "Normalize by Parent", wx.DefaultPosition, wx.DefaultSize, 0 )
    item70.SetValue( True )
    item70.SetToolTip( wx.ToolTip("Normalizes parts proportionally to overall song volume") )
    item70.SetName( "NormalizeByParent" )
    item69.Add( item70, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item48.Add( item69, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item27.Add( item48, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 0 )

    item72 = wx.StaticBox( parent, -1, "Render Options" )
    item71 = wx.StaticBoxSizer( item72, wx.VERTICAL )
    
    item73 = wx.BoxSizer( wx.HORIZONTAL )
    
    item74 = wx.CheckBox( parent, ID_CHECKBOX_RENDER, "Render to WAV", wx.DefaultPosition, wx.DefaultSize, 0 )
    item74.SetValue( True )
    item74.SetName( "RenderFiles" )
    item73.Add( item74, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item71.Add( item73, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item75 = wx.Choice( parent, ID_CHOICE_RENDERER, wx.DefaultPosition, [120,-1], 
        ["Modplug 1.16","BASS 2.0","DUMB 0.9.2","MikMod 3.0.3"] , 0 )
    item75.SetToolTip( wx.ToolTip("WAV rendering engine to use") )
    item75.SetName( "Renderer" )
    item71.Add( item75, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item76 = wx.BoxSizer( wx.HORIZONTAL )
    
    item77 = wx.Choice( parent, ID_CHOICE_SAMPLERATE, wx.DefaultPosition, wx.DefaultSize, 
        ["8000","11025","22050","32000","44100","48000","88200","96000"] , 0 )
    item77.SetName( "SampleRate" )
    item76.Add( item77, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item78 = wx.Choice( parent, ID_CHOICE_BITRATE, wx.DefaultPosition, wx.DefaultSize, 
        ["16 bit","32 bit IEEE"] , 0 )
    item78.SetName( "BitRate" )
    item76.Add( item78, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item71.Add( item76, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item79 = wx.CheckBox( parent, ID_CHECKBOX_NORMALIZE, "Normalize Amplification", wx.DefaultPosition, wx.DefaultSize, 0 )
    item79.SetValue( True )
    item79.SetToolTip( wx.ToolTip("If checked, rendered files will use a normalized amp value based on the parent file (file that is split)") )
    item79.SetName( "Normalize" )
    item79.Enable(False)
    item71.Add( item79, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item80 = wx.BoxSizer( wx.HORIZONTAL )
    
    item81 = wx.StaticText( parent, ID_TEXT, "Amplify %", wx.DefaultPosition, wx.DefaultSize, 0 )
    item81.SetToolTip( wx.ToolTip("Setting amplify too high will result in clipping. Use normalize to protect against clipping.") )
    item80.Add( item81, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item82 = wx.SpinCtrl( parent, ID_SPINCTRL_AMPLIFY, "50", wx.DefaultPosition, [50,-1], 0, 0, 100, 50 )
    item82.SetToolTip( wx.ToolTip("Amplification, 1-100.  Setting this too high will result in clipping.") )
    item82.SetName( "Amplify" )
    item82.Enable(False)
    item80.Add( item82, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item71.Add( item80, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item83 = wx.BoxSizer( wx.HORIZONTAL )
    
    item84 = wx.StaticText( parent, ID_TEXT, "Interpolation:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item83.Add( item84, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item85 = wx.Choice( parent, ID_CHOICE_INTERPOL, wx.DefaultPosition, [70,-1], 
        ["None","Linear"] , 0 )
    item85.SetName( "InterpolationMode" )
    item83.Add( item85, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item71.Add( item83, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item86 = wx.BoxSizer( wx.HORIZONTAL )
    
    item87 = wx.StaticText( parent, ID_TEXT, "Vol. Ramp:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item86.Add( item87, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item88 = wx.Choice( parent, ID_CHOICE_VOLRAMP, wx.DefaultPosition, [60,-1], 
        ["None","Normal","Smoother"] , 0 )
    item88.SetName( "VolumeRampMode" )
    item86.Add( item88, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item71.Add( item86, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item89 = wx.BoxSizer( wx.HORIZONTAL )
    
    item90 = wx.CheckBox( parent, ID_CHECKBOX_SLICE, "Slice", wx.DefaultPosition, wx.DefaultSize, 0 )
    item90.SetToolTip( wx.ToolTip("Slice output WAV") )
    item90.SetName( "RenderSlice" )
    item89.Add( item90, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item91 = wx.SpinCtrl( parent, ID_SPINCTRL_SLICE, "2", wx.DefaultPosition, [50,-1], 0, 2, 256, 2 )
    item91.SetName( "NumSlices" )
    item91.Enable(False)
    item89.Add( item91, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item92 = wx.TextCtrl( parent, ID_TEXTCTRL_KEEPSLICES, "", wx.DefaultPosition, [30,-1], 0 )
    item92.SetToolTip( wx.ToolTip("Range of slices to keep (blank = all)") )
    item92.SetName( "KeepSlices" )
    item92.Enable(False)
    item89.Add( item92, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item71.Add( item89, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item27.Add( item71, 0, wx.GROW|wx.ALL, 0 )

    item1.Add( item27, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item94 = wx.StaticBox( parent, -1, "Output" )
    item93 = wx.StaticBoxSizer( item94, wx.HORIZONTAL )
    
    item95 = wx.ListBox( parent, ID_SPLITTER_PREVIEW_BOX, wx.DefaultPosition, [200,250], [], wx.LB_EXTENDED|wx.LB_HSCROLL|wx.LB_NEEDED_SB )
    item95.SetName( "OutputBox" )
    item93.Add( item95, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item93, 0, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item96 = wx.BoxSizer( wx.VERTICAL )
    
    item96.Add( [ 20, 50 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item97 = wx.Button( parent, ID_SPLITTER_PREVIEW_BUTTON, "Preview", wx.DefaultPosition, wx.DefaultSize, 0 )
    item97.SetName( "PreviewButton" )
    item96.Add( item97, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item98 = wx.Button( parent, ID_SPLITTER_SPLIT_BUTTON, "Split", wx.DefaultPosition, wx.DefaultSize, 0 )
    item98.SetName( "SplitButton" )
    item96.Add( item98, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item99 = wx.Gauge( parent, ID_GAUGE_EXPORT, 100, wx.DefaultPosition, [100,10], 0 )
    item99.SetName( "ExportGauge" )
    item96.Add( item99, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item100 = wx.Gauge( parent, ID_GAUGE_SUBPROGRESS, 100, wx.DefaultPosition, [100,10], 0 )
    item100.SetName( "SubProgressBar" )
    item96.Add( item100, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item101 = wx.Gauge( parent, ID_GAUGE_RENDER, 100, wx.DefaultPosition, [100,10], 0 )
    item101.SetName( "RenderProgressBar" )
    item96.Add( item101, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item102 = wx.StaticText( parent, ID_TEXT_STATUS, "", wx.DefaultPosition, wx.DefaultSize, 0 )
    item102.SetName( "StatusText" )
    item96.Add( item102, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item96, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0


def PlaybackOptionsFunc( parent, call_fit = True, set_sizer = True ):
    item1 = wx.StaticBox( parent, -1, "Playback Options" )
    item0 = wx.StaticBoxSizer( item1, wx.HORIZONTAL )
    
    item2 = wx.Choice( parent, ID_CHOICE_RENDERER, wx.DefaultPosition, [80,-1], 
        ["ModPlug","BASS 2.0"] , 0 )
    item2.SetName( "Renderer" )
    item0.Add( item2, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item3 = wx.BoxSizer( wx.HORIZONTAL )
    
    item4 = wx.Choice( parent, ID_CHOICE_SAMPLERATE, wx.DefaultPosition, wx.DefaultSize, 
        ["8000","11025","22050","32000","44100","48000","88200","96000"] , 0 )
    item4.SetName( "SampleRate" )
    item3.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item5 = wx.Choice( parent, ID_CHOICE_BITRATE, wx.DefaultPosition, wx.DefaultSize, 
        ["16 bit","32 bit"] , 0 )
    item5.SetName( "BitRate" )
    item3.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item3, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item6 = wx.BoxSizer( wx.HORIZONTAL )
    
    item7 = wx.Choice( parent, ID_CHOICE_INTERPOLATION, wx.DefaultPosition, [60,-1], 
        ["None","Linear"] , 0 )
    item7.SetToolTip( wx.ToolTip("Interpolation mode (type of resampling used)") )
    item7.SetName( "InterpolationMode" )
    item6.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item6, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0


def ITDocument2Dialog2Backup( parent, call_fit = True, set_sizer = True ):
    item0 = wx.BoxSizer( wx.VERTICAL )
    
    item1 = wx.BoxSizer( wx.HORIZONTAL )
    
    item2 = wx.StaticText( parent, ID_TEXT2, "Song name", wx.DefaultPosition, wx.DefaultSize, 0 )
    item1.Add( item2, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item3 = wx.TextCtrl( parent, ID_ITDOC_NAME, "", wx.DefaultPosition, [240,-1], 0 )
    item3.SetName( "SongName" )
    item1.Add( item3, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item1, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item4 = wx.BoxSizer( wx.HORIZONTAL )
    
    item5 = wx.StaticText( parent, ID_TEXT1, "Filename    ", wx.DefaultPosition, wx.DefaultSize, 0 )
    item4.Add( item5, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item6 = wx.TextCtrl( parent, ID_ITDOC_FNAME, "", wx.DefaultPosition, [240,-1], 0 )
    item6.SetName( "Filename" )
    item4.Add( item6, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item4, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item7 = wx.BoxSizer( wx.HORIZONTAL )
    
    item8 = wx.StaticText( parent, ID_TEXT_TEMPO, "Tempo", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item8, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item9 = wx.SpinCtrl( parent, ID_SPINCTRL_TEMPO, "140", wx.DefaultPosition, [50,-1], wx.SP_ARROW_KEYS, 32, 255, 140 )
    item9.SetName( "Tempo" )
    item7.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item10 = wx.StaticText( parent, ID_ITDOC_TICKS, "Ticks", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item11 = wx.SpinCtrl( parent, ID_ITDOC_SPEED, "6", wx.DefaultPosition, [50,-1], wx.SP_ARROW_KEYS, 1, 31, 6 )
    item11.SetName( "Ticks" )
    item7.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item12 = wx.StaticText( parent, ID_TEXT, "Global Vol", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item13 = wx.SpinCtrl( parent, ID_SPINCTRL_GLOBAL_VOLUME, "0", wx.DefaultPosition, [50,-1], 0, 0, 128, 0 )
    item13.SetName( "GlobalVolume" )
    item7.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item14 = wx.StaticText( parent, ID_TEXT, "Mixing Vol", wx.DefaultPosition, wx.DefaultSize, 0 )
    item7.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item15 = wx.SpinCtrl( parent, ID_SPINCTRL_MIXING_VOLUME, "0", wx.DefaultPosition, [50,-1], 0, 0, 128, 0 )
    item15.SetName( "MixingVolume" )
    item7.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item0.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item16 = wx.BoxSizer( wx.HORIZONTAL )
    parent.ITDocSelectionSizer = item16
    
    item18 = wx.StaticBox( parent, -1, "Samples" )
    item17 = wx.StaticBoxSizer( item18, wx.VERTICAL )
    
    item19 = wx.ListBox( parent, ID_LISTBOX_SAMPLES, wx.DefaultPosition, [120,150], 
        [""] , wx.LB_EXTENDED )
    item19.SetName( "SampleList" )
    item17.Add( item19, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item16.Add( item17, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item21 = wx.StaticBox( parent, -1, "Instruments" )
    item20 = wx.StaticBoxSizer( item21, wx.VERTICAL )
    
    item22 = wx.ListBox( parent, ID_LISTBOX_INSTRUMENTS, wx.DefaultPosition, [-1,120], [], wx.LB_EXTENDED )
    item22.SetName( "InstrumentList" )
    item20.Add( item22, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item16.Add( item20, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item24 = wx.StaticBox( parent, -1, "Patterns" )
    item23 = wx.StaticBoxSizer( item24, wx.VERTICAL )
    
    item25 = wx.ListBox( parent, ID_LISTBOX_PATTERNS, wx.DefaultPosition, [-1,120], [], wx.LB_EXTENDED )
    item25.SetName( "SampleList" )
    item23.Add( item25, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item16.Add( item23, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item27 = wx.StaticBox( parent, -1, "Tracks" )
    item26 = wx.StaticBoxSizer( item27, wx.VERTICAL )
    
    item28 = wx.ListBox( parent, ID_LISTBOX_TRACKS, wx.DefaultPosition, [-1,120], [], wx.LB_EXTENDED )
    item28.SetName( "SampleList" )
    item26.Add( item28, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item16.Add( item26, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item16, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item29 = wx.BoxSizer( wx.HORIZONTAL )
    
    item30 = wx.StaticText( parent, ID_TEXT, "Order List:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item29.Add( item30, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    from ctl_orderlist import OrderListControl
    parent.orderListControl =     OrderListControl(parent, ID_ORDERLIST)

    item31 = parent.FindWindowById( ID_ORDERLIST )
    item29.Add( item31, 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item0.Add( item29, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item33 = wx.StaticBox( parent, -1, "" )
    item32 = wx.StaticBoxSizer( item33, wx.VERTICAL )
    
    item34 = wx.BoxSizer( wx.HORIZONTAL )
    
    item35 = wx.Button( parent, ID_BUTTON_PLAY, "No image", wx.DefaultPosition, wx.DefaultSize )
    item35.SetToolTip( wx.ToolTip("Play") )
    item35.SetName( "PlayButton" )
    item34.Add( item35, 0, wx.ALIGN_CENTER, 0 )

    item36 = wx.Button( parent, ID_BUTTON_STOP, "No image", wx.DefaultPosition, wx.DefaultSize )
    item36.SetToolTip( wx.ToolTip("Stop") )
    item36.SetName( "StopButton" )
    item34.Add( item36, 0, wx.ALIGN_CENTER, 0 )

    item34.Add( [ 10, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item37 = wx.Button( parent, ID_ITDOC_SAVE, "No image", wx.DefaultPosition, wx.DefaultSize )
    item37.SetToolTip( wx.ToolTip("Save File") )
    item37.SetName( "SaveButton" )
    item34.Add( item37, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item38 = wx.Button( parent, ID_ITDOC_SAVEAS, "No image", wx.DefaultPosition, wx.DefaultSize )
    item38.SetToolTip( wx.ToolTip("Save As") )
    item34.Add( item38, 0, wx.ALIGN_CENTER, 5 )

    item34.Add( [ 10, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item39 = wx.Button( parent, ID_BUTTON_SPLIT, "No image", wx.DefaultPosition, wx.DefaultSize )
    item39.SetToolTip( wx.ToolTip("Split/Render Sequences") )
    item34.Add( item39, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item40 = wx.Button( parent, ID_BUTTON_EXPORT, "No image", wx.DefaultPosition, wx.DefaultSize )
    item40.SetToolTip( wx.ToolTip("Export Samples") )
    item34.Add( item40, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item41 = wx.Button( parent, ID_BUTTON_RENDER, "No image", wx.DefaultPosition, wx.DefaultSize )
    item41.SetToolTip( wx.ToolTip("Render Song") )
    item34.Add( item41, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item34.Add( [ 10, 20 ] , 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item42 = wx.Button( parent, ID_ITDOC_UNFOLD, "No image", wx.DefaultPosition, wx.DefaultSize )
    item42.SetToolTip( wx.ToolTip("Unfold Patterns") )
    item34.Add( item42, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item43 = wx.Button( parent, ID_MENU_REMOVE_UNUSED_SAMPLES, "No image", wx.DefaultPosition, wx.DefaultSize )
    item43.SetToolTip( wx.ToolTip("Removed Unused Samples") )
    item34.Add( item43, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item44 = wx.Button( parent, ID_MENU_SLICEWAVTOIT, "No image", wx.DefaultPosition, wx.DefaultSize )
    item44.SetToolTip( wx.ToolTip("Slice a WAV into the sample table.") )
    item34.Add( item44, 0, wx.ALIGN_CENTER|wx.ALL, 0 )

    item34.Add( [ 10, 20 ] , 1, wx.GROW|wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 5 )

    item45 = wx.StaticText( parent, ID_TEXT_TIME, "00:00", wx.DefaultPosition, wx.DefaultSize, 0 )
    item45.SetName( "TimePosition" )
    item34.Add( item45, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item46 = wx.StaticText( parent, ID_TEXT_STATUS, "000:000", wx.DefaultPosition, wx.DefaultSize, 0 )
    item46.SetName( "StatusText" )
    item34.Add( item46, 0, wx.ALIGN_CENTER|wx.ALL, 5 )

    item47 = wx.Slider( parent, ID_VOLUME_SLIDER, 0, 0, 100, wx.DefaultPosition, [100,-1], wx.SL_HORIZONTAL )
    item47.SetName( "VolumeSlider" )
    item34.Add( item47, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item32.Add( item34, 1, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    item0.Add( item32, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 0 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

# Menubar functions

ID_MENU_FILE_NEW = 10158
ID_MENU_FILE_OPEN = 10159
ID_MENU_FILE_Close = 10160
ID_MENU = 10161
ID_MENU_FILE_SAVE = 10162
ID_MENU_FILE_SAVE_AS = 10163
ID_MENU_EXIT = 10164
ID_MENU_FILE = 10165
ID_MENU_NEWBATCH = 10166
ID_MENU_BATCH_OPENFILE = 10167
ID_MENU_BATCH_APPENDFILE = 10168
ID_MENU_BATCH_ADD = 10169
ID_MENU_BATCH_ADD_DIR = 10170
ID_MENU_BATCH_ADD_DIR_TREE = 10171
ID_MENU_BATCH_OPENDIR = 10172
ID_MENU_BATCH_OPENDIR_TREE = 10173
ID_MENU_BATCH = 10174
ID_MENU_PROCESS_UNFOLD = 10175
ID_MENU_PROCESS_SPLIT_SEQ = 10176
ID_MENU_PROCESS_RENDER_WAV = 10177
ID_MENU_PROCESS_EXPORT_SAMPLES = 10178
ID_BUTTON_PLAY_PATTERN = 10179
ID_MENU_PATSCREEN = 10180
ID_MENU_SAMPSCREEN = 10181
ID_MENU_INSTSCREEN = 10182
ID_MENU_TRACKSCREEN = 10183
ID_MENU_TOOLS = 10184
ID_MENU_OPTIONS_PREFERENCES = 10185
ID_MENU_TEXT = 10186
ID_MENU_LOOP_PATTERNS = 10187
ID_MENU_LOOP_SAMPLES = 10188
ID_MENU_LOOP_SONGS = 10189
ID_MENU_MIXER = 10190
ID_MENU_OPTIONS = 10191
ID_MENU_HELP_CONTENTS = 10192
ID_MENU_BUYNOW = 10193
ID_MENU_CHECK_UPDATES = 10194
ID_MENU_HELP_MAGICFISH = 10195
ID_MENU_HELP_SUPPORTFORUM = 10196
ID_MENU_HELP_ABOUT = 10197
ID_MENU_MAGICFISH = 10198

def MenuBarFunc():
    item0 = wx.MenuBar()
    
    item1 = wx.Menu()
    item1.Append( ID_MENU_FILE_NEW, "&New\tCtrl-N", "Create a new Impulse Tracker file" )
    item1.Append( ID_MENU_FILE_OPEN, "&Open\tCtrl-O", "Open an existing Impulse Tracker file" )
    item1.Append( ID_MENU_FILE_Close, "&Close", "Close currently selected file" )
    item1.AppendSeparator()
    item1.Append( ID_MENU_FILE_SAVE, "&Save\tCtrl-S", "Save current file" )
    item1.Append( ID_MENU_FILE_SAVE_AS, "Save &As", "Save current file" )
    item1.AppendSeparator()
    item1.AppendSeparator()
    item1.Append( ID_MENU_EXIT, "E&xit\tAlt-F4", "Exit Postmod" )
    item0.Append( item1, "&File" )
    
    item2 = wx.Menu()
    item2.Append( ID_MENU_NEWBATCH, "&New Batch", "Create a new batch of files" )
    item2.Append( ID_MENU_BATCH_OPENFILE, "&Open Batch File", "Open a saved batch file" )
    item2.Append( ID_MENU_FILE_SAVE_AS, "&Save Batch File", "" )
    item2.Append( ID_MENU_BATCH_APPENDFILE, "&Append from File", "Append a saved batch file to the current batch" )
    item2.AppendSeparator()
    item2.Append( ID_MENU_BATCH_ADD, "&Add File(s)", "Add files to the current batch" )
    item2.Append( ID_MENU_BATCH_ADD_DIR, "Add Dir", "Add all files in a directory to current batch" )
    item2.Append( ID_MENU_BATCH_ADD_DIR_TREE, "Add Dir Tree", "Add all files in a directory tree to current batch" )
    item2.AppendSeparator()
    item2.Append( ID_MENU_BATCH_OPENDIR, "IT Batch from &Dir", "Add all files in a directory to a new file batch" )
    item2.Append( ID_MENU_BATCH_OPENDIR_TREE, "IT Batch from Dir &Tree", "Add all files in a directory tree to a new file batch" )
    item0.Append( item2, "&Batch" )
    
    item3 = wx.Menu()
    item3.Append( ID_MENU_PROCESS_UNFOLD, "&Unfold Sequences", "Unfold Impulse Tracker files" )
    item3.Append( ID_MENU_PROCESS_SPLIT_SEQ, "&Split Sequences", "Split Impulse Tracker files" )
    item3.AppendSeparator()
    item3.Append( ID_MENU_PROCESS_RENDER_WAV, "&Render to WAV", "Export Impulse Tracker files as WAV files" )
    item3.AppendSeparator()
    item3.Append( ID_MENU_PROCESS_EXPORT_SAMPLES, "&Export Samples", "Export Samples from Impulse Tracker files" )
    item3.Append( ID_MENU_REMOVE_UNUSED_SAMPLES, "Remove Unused Samples", "Remove unused samples from IT files" )
    item3.AppendSeparator()
    item3.Append( ID_MENU_SLICEWAVTOIT, "S&lice WAV into IT", "Slice a soundfile into an Impulse Tracker file" )
    item3.AppendSeparator()
    item3.Append( ID_BUTTON_PLAY, "&Play\tF5", "" )
    item3.Append( ID_BUTTON_PLAY_PATTERN, "Play Patter&n\tF6", "" )
    item3.Append( ID_BUTTON_STOP, "&Stop\tF8", "" )
    item3.Append( ID_MENU_PATSCREEN, "Patterns\tF2", "" )
    item3.Append( ID_MENU_SAMPSCREEN, "Samples\tF3", "" )
    item3.Append( ID_MENU_INSTSCREEN, "Instruments\tF4", "" )
    item3.Append( ID_MENU_TRACKSCREEN, "Tracks\tCtrl-F2", "" )
    item0.Append( item3, "&Tools" )
    
    item4 = wx.Menu()
    item4.Append( ID_MENU_OPTIONS_PREFERENCES, "&Preferences", "Set Postmod options and preferences" )
    item4.AppendSeparator()
    item4.Append( ID_MENU_TEXT, "Playback Options:", "" )
    item4.Append( ID_MENU_LOOP_PATTERNS, "Loop Patterns", "", True )
    item4.Append( ID_MENU_LOOP_SAMPLES, "Loop Samples", "", True )
    item4.Append( ID_MENU_LOOP_SONGS, "Loop Songs", "", True )
    item4.AppendSeparator()
    item4.Append( ID_MENU_MIXER, "Playback &Mixer\tCtrl-M", "" )
    item0.Append( item4, "&Options" )
    
    item5 = wx.Menu()
    item5.Append( ID_MENU_HELP_CONTENTS, "&Contents and Index\tF1", "Help" )
    item5.AppendSeparator()
    item5.Append( ID_MENU_BUYNOW, "Register Now", "Register Postmod" )
    item5.Append( ID_MENU_CHECK_UPDATES, "Check for &Updates", "Check for Updates over Internet" )
    item5.AppendSeparator()
    item5.Append( ID_MENU_HELP_MAGICFISH, "Magicfish Software", "Magicfish Software Official Website" )
    item5.Append( ID_MENU_HELP_SUPPORTFORUM, "Support Forum", "" )
    item5.AppendSeparator()
    item5.Append( ID_MENU_HELP_ABOUT, "&About POSTMOD", "About Magicfish Postmod" )
    item0.Append( item5, "&Help" )
    
    return item0

# Toolbar functions


def MainToolBarFunc( parent ):
    parent.SetMargins( [2,2] )
    
    parent.AddLabelTool( ID_MENU_FILE_NEW, "", Toolbar1( 5 ), wx.NullBitmap, wx.ITEM_NORMAL, "New IT File" )
    parent.AddLabelTool( ID_MENU_FILE_OPEN, "", Toolbar1( 6 ), wx.NullBitmap, wx.ITEM_NORMAL, "Open file" )
    parent.AddLabelTool( ID_MENU_FILE_SAVE, "", Toolbar1( 7 ), wx.NullBitmap, wx.ITEM_NORMAL, "Save file" )
    parent.AddLabelTool( ID_MENU_FILE_SAVE_AS, "", Toolbar1( 8 ), wx.NullBitmap, wx.ITEM_NORMAL, "Save as..." )
    parent.AddSeparator()
    parent.AddLabelTool( ID_MENU_NEWBATCH, "", Toolbar1( 17 ), wx.NullBitmap, wx.ITEM_NORMAL, "New Batch" )
    parent.AddLabelTool( ID_MENU_BATCH_ADD_DIR, "", Toolbar1( 18 ), wx.NullBitmap, wx.ITEM_NORMAL, "Add Directory to Current Batch" )
    parent.AddLabelTool( ID_MENU_BATCH_ADD_DIR_TREE, "", Toolbar1( 19 ), wx.NullBitmap, wx.ITEM_NORMAL, "Add Directory Tree to Current Batch" )
    parent.AddSeparator()
    parent.AddLabelTool( ID_BUTTON_PLAY, "", Toolbar1( 3 ), wx.NullBitmap, wx.ITEM_NORMAL, "Play" )
    parent.AddLabelTool( ID_BUTTON_STOP, "", Toolbar1( 4 ), wx.NullBitmap, wx.ITEM_NORMAL, "Stop" )
    parent.AddSeparator()
    parent.AddLabelTool( ID_MENU_PROCESS_SPLIT_SEQ, "", Toolbar1( 22 ), wx.NullBitmap, wx.ITEM_NORMAL, "Split/Render Sequences" )
    parent.AddLabelTool( ID_MENU_PROCESS_EXPORT_SAMPLES, "", Toolbar1( 13 ), wx.NullBitmap, wx.ITEM_NORMAL, "Export Samples" )
    parent.AddLabelTool( ID_MENU_PROCESS_RENDER_WAV, "", Toolbar1( 15 ), wx.NullBitmap, wx.ITEM_NORMAL, "Render Song" )
    parent.AddSeparator()
    parent.AddLabelTool( ID_MENU_PROCESS_UNFOLD, "", Toolbar1( 16 ), wx.NullBitmap, wx.ITEM_NORMAL, "Unfold Patterns" )
    parent.AddLabelTool( ID_MENU_REMOVE_UNUSED_SAMPLES, "", Toolbar1( 20 ), wx.NullBitmap, wx.ITEM_NORMAL, "Remove Unused Samples" )
    parent.AddLabelTool( ID_MENU_SLICEWAVTOIT, "", Toolbar1( 21 ), wx.NullBitmap, wx.ITEM_NORMAL, "Slice a WAV into an IT file" )
    parent.AddSeparator()
    parent.AddLabelTool( ID_MENU_HELP_CONTENTS, "", Toolbar1( 10 ), wx.NullBitmap, wx.ITEM_NORMAL, "Help" )
    parent.AddSeparator()
    item6 = wx.Choice( parent, ID_CHOICE_RENDERER, wx.DefaultPosition, [100,-1], 
        ["Modplug 1.16","BASS 2.0"] , 0 )
    parent.AddControl( item6 )
    item7 = wx.Choice( parent, ID_CHOICE_SAMPLERATE, wx.DefaultPosition, [60,-1], [], 0 )
    parent.AddControl( item7 )
    item8 = wx.Choice( parent, ID_CHOICE_BITRATE, wx.DefaultPosition, [60,-1], [], 0 )
    parent.AddControl( item8 )
    item9 = wx.Choice( parent, ID_CHOICE_INTERPOLATION, wx.DefaultPosition, [70,-1], [], 0 )
    parent.AddControl( item9 )
    
    parent.Realize()

# Bitmap functions


def Toolbar1( index ):
    if index == 0:
        return wx.Image( "postmod_wdr/Toolbar1_0.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 1:
        return wx.Image( "postmod_wdr/Toolbar1_1.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 2:
        return wx.Image( "postmod_wdr/Toolbar1_2.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 3:
        return wx.Image( "postmod_wdr/Toolbar1_3.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 4:
        return wx.Image( "postmod_wdr/Toolbar1_4.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 5:
        return wx.Image( "postmod_wdr/Toolbar1_5.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 6:
        return wx.Image( "postmod_wdr/Toolbar1_6.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 7:
        return wx.Image( "postmod_wdr/Toolbar1_7.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 8:
        return wx.Image( "postmod_wdr/Toolbar1_8.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 9:
        return wx.Image( "postmod_wdr/Toolbar1_9.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 10:
        return wx.Image( "postmod_wdr/Toolbar1_10.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 11:
        return wx.Image( "postmod_wdr/Toolbar1_11.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 12:
        return wx.Image( "postmod_wdr/Toolbar1_12.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 13:
        return wx.Image( "postmod_wdr/Toolbar1_13.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 14:
        return wx.Image( "postmod_wdr/Toolbar1_14.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 15:
        return wx.Image( "postmod_wdr/Toolbar1_15.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 16:
        return wx.Image( "postmod_wdr/Toolbar1_16.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 17:
        return wx.Image( "postmod_wdr/Toolbar1_17.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 18:
        return wx.Image( "postmod_wdr/Toolbar1_18.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 19:
        return wx.Image( "postmod_wdr/Toolbar1_19.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 20:
        return wx.Image( "postmod_wdr/Toolbar1_20.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 21:
        return wx.Image( "postmod_wdr/Toolbar1_21.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    if index == 22:
        return wx.Image( "postmod_wdr/Toolbar1_22.png", wx.BITMAP_TYPE_PNG ).ConvertToBitmap()
    return wx.NullBitmap

# End of generated file
